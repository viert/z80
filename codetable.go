package z80

//
// This file is ported from libz80 and actually must be generated
// from a z80 opcodes table just like it's done in the original version
//

type Z80OperandType int

type Z80OpcodeEntry struct {
	function    func()
	operandType Z80OperandType
	format      string
	nextTable   *Z80OpcodeTable
}

type Z80OpcodeTable struct {
	opcodeOffset int
	entries      [256]Z80OpcodeEntry
}

const (
	OP_NONE Z80OperandType = iota
	OP_BYTE
	OP_OFFSET
	OP_WORD
)

func (c *Context) createTables() {

	c.opcodes_main = Z80OpcodeTable{
		0,
		[256]Z80OpcodeEntry{
			{c.nop, OP_NONE, "NOP", nil},
			{c.ld_BC_nn, OP_WORD, "LD BC,0%04Xh", nil},
			{c.ld_off_BC_A, OP_NONE, "LD (BC),A", nil},
			{c.inc_BC, OP_NONE, "INC BC", nil},
			{c.inc_B, OP_NONE, "INC B", nil},
			{c.dec_B, OP_NONE, "DEC B", nil},
			{c.ld_B_n, OP_BYTE, "LD B,0%02Xh", nil},
			{c.rlca, OP_NONE, "RLCA", nil},
			{c.ex_AF_AF_, OP_NONE, "EX AF,AF'", nil},
			{c.add_HL_BC, OP_NONE, "ADD HL,BC", nil},
			{c.ld_A_off_BC, OP_NONE, "LD A,(BC)", nil},
			{c.dec_BC, OP_NONE, "DEC BC", nil},
			{c.inc_C, OP_NONE, "INC C", nil},
			{c.dec_C, OP_NONE, "DEC C", nil},
			{c.ld_C_n, OP_BYTE, "LD C,0%02Xh", nil},
			{c.rrca, OP_NONE, "RRCA", nil},
			{c.djnz_off_PC_e, OP_OFFSET, "DJNZ (PC+%d)", nil},
			{c.ld_DE_nn, OP_WORD, "LD DE,0%04Xh", nil},
			{c.ld_off_DE_A, OP_NONE, "LD (DE),A", nil},
			{c.inc_DE, OP_NONE, "INC DE", nil},
			{c.inc_D, OP_NONE, "INC D", nil},
			{c.dec_D, OP_NONE, "DEC D", nil},
			{c.ld_D_n, OP_BYTE, "LD D,0%02Xh", nil},
			{c.rla, OP_NONE, "RLA", nil},
			{c.jr_off_PC_e, OP_OFFSET, "JR (PC+%d)", nil},
			{c.add_HL_DE, OP_NONE, "ADD HL,DE", nil},
			{c.ld_A_off_DE, OP_NONE, "LD A,(DE)", nil},
			{c.dec_DE, OP_NONE, "DEC DE", nil},
			{c.inc_E, OP_NONE, "INC E", nil},
			{c.dec_E, OP_NONE, "DEC E", nil},
			{c.ld_E_n, OP_BYTE, "LD E,0%02Xh", nil},
			{c.rra, OP_NONE, "RRA", nil},
			{c.jr_NZ_off_PC_e, OP_OFFSET, "JR NZ,(PC+%d)", nil},
			{c.ld_HL_nn, OP_WORD, "LD HL,0%04Xh", nil},
			{c.ld_off_nn_HL, OP_WORD, "LD (0%04Xh),HL", nil},
			{c.inc_HL, OP_NONE, "INC HL", nil},
			{c.inc_H, OP_NONE, "INC H", nil},
			{c.dec_H, OP_NONE, "DEC H", nil},
			{c.ld_H_n, OP_BYTE, "LD H,0%02Xh", nil},
			{c.daa, OP_NONE, "DAA", nil},
			{c.jr_Z_off_PC_e, OP_OFFSET, "JR Z,(PC+%d)", nil},
			{c.add_HL_HL, OP_NONE, "ADD HL,HL", nil},
			{c.ld_HL_off_nn, OP_WORD, "LD HL,(0%04Xh)", nil},
			{c.dec_HL, OP_NONE, "DEC HL", nil},
			{c.inc_L, OP_NONE, "INC L", nil},
			{c.dec_L, OP_NONE, "DEC L", nil},
			{c.ld_L_n, OP_BYTE, "LD L,0%02Xh", nil},
			{c.cpl, OP_NONE, "CPL", nil},
			{c.jr_NC_off_PC_e, OP_OFFSET, "JR NC,(PC+%d)", nil},
			{c.ld_SP_nn, OP_WORD, "LD SP,0%04Xh", nil},
			{c.ld_off_nn_A, OP_WORD, "LD (0%04Xh),A", nil},
			{c.inc_SP, OP_NONE, "INC SP", nil},
			{c.inc_off_HL, OP_NONE, "INC (HL)", nil},
			{c.dec_off_HL, OP_NONE, "DEC (HL)", nil},
			{c.ld_off_HL_n, OP_BYTE, "LD (HL),0%02Xh", nil},
			{c.scf, OP_NONE, "SCF", nil},
			{c.jr_C_off_PC_e, OP_OFFSET, "JR C,(PC+%d)", nil},
			{c.add_HL_SP, OP_NONE, "ADD HL,SP", nil},
			{c.ld_A_off_nn, OP_WORD, "LD A,(0%04Xh)", nil},
			{c.dec_SP, OP_NONE, "DEC SP", nil},
			{c.inc_A, OP_NONE, "INC A", nil},
			{c.dec_A, OP_NONE, "DEC A", nil},
			{c.ld_A_n, OP_BYTE, "LD A,0%02Xh", nil},
			{c.ccf, OP_NONE, "CCF", nil},
			{c.ld_B_B, OP_NONE, "LD B,B", nil},
			{c.ld_B_C, OP_NONE, "LD B,C", nil},
			{c.ld_B_D, OP_NONE, "LD B,D", nil},
			{c.ld_B_E, OP_NONE, "LD B,E", nil},
			{c.ld_B_H, OP_NONE, "LD B,H", nil},
			{c.ld_B_L, OP_NONE, "LD B,L", nil},
			{c.ld_B_off_HL, OP_NONE, "LD B,(HL)", nil},
			{c.ld_B_A, OP_NONE, "LD B,A", nil},
			{c.ld_C_B, OP_NONE, "LD C,B", nil},
			{c.ld_C_C, OP_NONE, "LD C,C", nil},
			{c.ld_C_D, OP_NONE, "LD C,D", nil},
			{c.ld_C_E, OP_NONE, "LD C,E", nil},
			{c.ld_C_H, OP_NONE, "LD C,H", nil},
			{c.ld_C_L, OP_NONE, "LD C,L", nil},
			{c.ld_C_off_HL, OP_NONE, "LD C,(HL)", nil},
			{c.ld_C_A, OP_NONE, "LD C,A", nil},
			{c.ld_D_B, OP_NONE, "LD D,B", nil},
			{c.ld_D_C, OP_NONE, "LD D,C", nil},
			{c.ld_D_D, OP_NONE, "LD D,D", nil},
			{c.ld_D_E, OP_NONE, "LD D,E", nil},
			{c.ld_D_H, OP_NONE, "LD D,H", nil},
			{c.ld_D_L, OP_NONE, "LD D,L", nil},
			{c.ld_D_off_HL, OP_NONE, "LD D,(HL)", nil},
			{c.ld_D_A, OP_NONE, "LD D,A", nil},
			{c.ld_E_B, OP_NONE, "LD E,B", nil},
			{c.ld_E_C, OP_NONE, "LD E,C", nil},
			{c.ld_E_D, OP_NONE, "LD E,D", nil},
			{c.ld_E_E, OP_NONE, "LD E,E", nil},
			{c.ld_E_H, OP_NONE, "LD E,H", nil},
			{c.ld_E_L, OP_NONE, "LD E,L", nil},
			{c.ld_E_off_HL, OP_NONE, "LD E,(HL)", nil},
			{c.ld_E_A, OP_NONE, "LD E,A", nil},
			{c.ld_H_B, OP_NONE, "LD H,B", nil},
			{c.ld_H_C, OP_NONE, "LD H,C", nil},
			{c.ld_H_D, OP_NONE, "LD H,D", nil},
			{c.ld_H_E, OP_NONE, "LD H,E", nil},
			{c.ld_H_H, OP_NONE, "LD H,H", nil},
			{c.ld_H_L, OP_NONE, "LD H,L", nil},
			{c.ld_H_off_HL, OP_NONE, "LD H,(HL)", nil},
			{c.ld_H_A, OP_NONE, "LD H,A", nil},
			{c.ld_L_B, OP_NONE, "LD L,B", nil},
			{c.ld_L_C, OP_NONE, "LD L,C", nil},
			{c.ld_L_D, OP_NONE, "LD L,D", nil},
			{c.ld_L_E, OP_NONE, "LD L,E", nil},
			{c.ld_L_H, OP_NONE, "LD L,H", nil},
			{c.ld_L_L, OP_NONE, "LD L,L", nil},
			{c.ld_L_off_HL, OP_NONE, "LD L,(HL)", nil},
			{c.ld_L_A, OP_NONE, "LD L,A", nil},
			{c.ld_off_HL_B, OP_NONE, "LD (HL),B", nil},
			{c.ld_off_HL_C, OP_NONE, "LD (HL),C", nil},
			{c.ld_off_HL_D, OP_NONE, "LD (HL),D", nil},
			{c.ld_off_HL_E, OP_NONE, "LD (HL),E", nil},
			{c.ld_off_HL_H, OP_NONE, "LD (HL),H", nil},
			{c.ld_off_HL_L, OP_NONE, "LD (HL),L", nil},
			{c.halt, OP_NONE, "HALT", nil},
			{c.ld_off_HL_A, OP_NONE, "LD (HL),A", nil},
			{c.ld_A_B, OP_NONE, "LD A,B", nil},
			{c.ld_A_C, OP_NONE, "LD A,C", nil},
			{c.ld_A_D, OP_NONE, "LD A,D", nil},
			{c.ld_A_E, OP_NONE, "LD A,E", nil},
			{c.ld_A_H, OP_NONE, "LD A,H", nil},
			{c.ld_A_L, OP_NONE, "LD A,L", nil},
			{c.ld_A_off_HL, OP_NONE, "LD A,(HL)", nil},
			{c.ld_A_A, OP_NONE, "LD A,A", nil},
			{c.add_A_B, OP_NONE, "ADD A,B", nil},
			{c.add_A_C, OP_NONE, "ADD A,C", nil},
			{c.add_A_D, OP_NONE, "ADD A,D", nil},
			{c.add_A_E, OP_NONE, "ADD A,E", nil},
			{c.add_A_H, OP_NONE, "ADD A,H", nil},
			{c.add_A_L, OP_NONE, "ADD A,L", nil},
			{c.add_A_off_HL, OP_NONE, "ADD A,(HL)", nil},
			{c.add_A_A, OP_NONE, "ADD A,A", nil},
			{c.adc_A_B, OP_NONE, "ADC A,B", nil},
			{c.adc_A_C, OP_NONE, "ADC A,C", nil},
			{c.adc_A_D, OP_NONE, "ADC A,D", nil},
			{c.adc_A_E, OP_NONE, "ADC A,E", nil},
			{c.adc_A_H, OP_NONE, "ADC A,H", nil},
			{c.adc_A_L, OP_NONE, "ADC A,L", nil},
			{c.adc_A_off_HL, OP_NONE, "ADC A,(HL)", nil},
			{c.adc_A_A, OP_NONE, "ADC A,A", nil},
			{c.sub_A_B, OP_NONE, "SUB A,B", nil},
			{c.sub_A_C, OP_NONE, "SUB A,C", nil},
			{c.sub_A_D, OP_NONE, "SUB A,D", nil},
			{c.sub_A_E, OP_NONE, "SUB A,E", nil},
			{c.sub_A_H, OP_NONE, "SUB A,H", nil},
			{c.sub_A_L, OP_NONE, "SUB A,L", nil},
			{c.sub_A_off_HL, OP_NONE, "SUB A,(HL)", nil},
			{c.sub_A_A, OP_NONE, "SUB A,A", nil},
			{c.sbc_A_B, OP_NONE, "SBC A,B", nil},
			{c.sbc_A_C, OP_NONE, "SBC A,C", nil},
			{c.sbc_A_D, OP_NONE, "SBC A,D", nil},
			{c.sbc_A_E, OP_NONE, "SBC A,E", nil},
			{c.sbc_A_H, OP_NONE, "SBC A,H", nil},
			{c.sbc_A_L, OP_NONE, "SBC A,L", nil},
			{c.sbc_A_off_HL, OP_NONE, "SBC A,(HL)", nil},
			{c.sbc_A_A, OP_NONE, "SBC A,A", nil},
			{c.and_B, OP_NONE, "AND B", nil},
			{c.and_C, OP_NONE, "AND C", nil},
			{c.and_D, OP_NONE, "AND D", nil},
			{c.and_E, OP_NONE, "AND E", nil},
			{c.and_H, OP_NONE, "AND H", nil},
			{c.and_L, OP_NONE, "AND L", nil},
			{c.and_off_HL, OP_NONE, "AND (HL)", nil},
			{c.and_A, OP_NONE, "AND A", nil},
			{c.xor_B, OP_NONE, "XOR B", nil},
			{c.xor_C, OP_NONE, "XOR C", nil},
			{c.xor_D, OP_NONE, "XOR D", nil},
			{c.xor_E, OP_NONE, "XOR E", nil},
			{c.xor_H, OP_NONE, "XOR H", nil},
			{c.xor_L, OP_NONE, "XOR L", nil},
			{c.xor_off_HL, OP_NONE, "XOR (HL)", nil},
			{c.xor_A, OP_NONE, "XOR A", nil},
			{c.or_B, OP_NONE, "OR B", nil},
			{c.or_C, OP_NONE, "OR C", nil},
			{c.or_D, OP_NONE, "OR D", nil},
			{c.or_E, OP_NONE, "OR E", nil},
			{c.or_H, OP_NONE, "OR H", nil},
			{c.or_L, OP_NONE, "OR L", nil},
			{c.or_off_HL, OP_NONE, "OR (HL)", nil},
			{c.or_A, OP_NONE, "OR A", nil},
			{c.cp_B, OP_NONE, "CP B", nil},
			{c.cp_C, OP_NONE, "CP C", nil},
			{c.cp_D, OP_NONE, "CP D", nil},
			{c.cp_E, OP_NONE, "CP E", nil},
			{c.cp_H, OP_NONE, "CP H", nil},
			{c.cp_L, OP_NONE, "CP L", nil},
			{c.cp_off_HL, OP_NONE, "CP (HL)", nil},
			{c.cp_A, OP_NONE, "CP A", nil},
			{c.ret_NZ, OP_NONE, "RET NZ", nil},
			{c.pop_BC, OP_NONE, "POP BC", nil},
			{c.jp_NZ_off_nn, OP_WORD, "JP NZ,(0%04Xh)", nil},
			{c.jp_off_nn, OP_WORD, "JP (0%04Xh)", nil},
			{c.call_NZ_off_nn, OP_WORD, "CALL NZ,(0%04Xh)", nil},
			{c.push_BC, OP_NONE, "PUSH BC", nil},
			{c.add_A_n, OP_BYTE, "ADD A,0%02Xh", nil},
			{c.rst_0H, OP_NONE, "RST 0H", nil},
			{c.ret_Z, OP_NONE, "RET Z", nil},
			{c.ret, OP_NONE, "RET", nil},
			{c.jp_Z_off_nn, OP_WORD, "JP Z,(0%04Xh)", nil},
			{nil, OP_NONE, "", &c.opcodes_CB},
			{c.call_Z_off_nn, OP_WORD, "CALL Z,(0%04Xh)", nil},
			{c.call_off_nn, OP_WORD, "CALL (0%04Xh)", nil},
			{c.adc_A_n, OP_BYTE, "ADC A,0%02Xh", nil},
			{c.rst_8H, OP_NONE, "RST 8H", nil},
			{c.ret_NC, OP_NONE, "RET NC", nil},
			{c.pop_DE, OP_NONE, "POP DE", nil},
			{c.jp_NC_off_nn, OP_WORD, "JP NC,(0%04Xh)", nil},
			{c.out_off_n_A, OP_BYTE, "OUT (0%02Xh),A", nil},
			{c.call_NC_off_nn, OP_WORD, "CALL NC,(0%04Xh)", nil},
			{c.push_DE, OP_NONE, "PUSH DE", nil},
			{c.sub_A_n, OP_BYTE, "SUB A,0%02Xh", nil},
			{c.rst_10H, OP_NONE, "RST 10H", nil},
			{c.ret_C, OP_NONE, "RET C", nil},
			{c.exx, OP_NONE, "EXX", nil},
			{c.jp_C_off_nn, OP_WORD, "JP C,(0%04Xh)", nil},
			{c.in_A_off_n, OP_BYTE, "IN A,(0%02Xh)", nil},
			{c.call_C_off_nn, OP_WORD, "CALL C,(0%04Xh)", nil},
			{nil, OP_NONE, "", &c.opcodes_DD},
			{c.sbc_A_n, OP_BYTE, "SBC A,0%02Xh", nil},
			{c.rst_18H, OP_NONE, "RST 18H", nil},
			{c.ret_PO, OP_NONE, "RET PO", nil},
			{c.pop_HL, OP_NONE, "POP HL", nil},
			{c.jp_PO_off_nn, OP_WORD, "JP PO,(0%04Xh)", nil},
			{c.ex_off_SP_HL, OP_NONE, "EX (SP),HL", nil},
			{c.call_PO_off_nn, OP_WORD, "CALL PO,(0%04Xh)", nil},
			{c.push_HL, OP_NONE, "PUSH HL", nil},
			{c.and_n, OP_BYTE, "AND 0%02Xh", nil},
			{c.rst_20H, OP_NONE, "RST 20H", nil},
			{c.ret_PE, OP_NONE, "RET PE", nil},
			{c.jp_off_HL, OP_NONE, "JP (HL)", nil},
			{c.jp_PE_off_nn, OP_WORD, "JP PE,(0%04Xh)", nil},
			{c.ex_DE_HL, OP_NONE, "EX DE,HL", nil},
			{c.call_PE_off_nn, OP_WORD, "CALL PE,(0%04Xh)", nil},
			{nil, OP_NONE, "", &c.opcodes_ED},
			{c.xor_n, OP_BYTE, "XOR 0%02Xh", nil},
			{c.rst_28H, OP_NONE, "RST 28H", nil},
			{c.ret_P, OP_NONE, "RET P", nil},
			{c.pop_AF, OP_NONE, "POP AF", nil},
			{c.jp_P_off_nn, OP_WORD, "JP P,(0%04Xh)", nil},
			{c.di, OP_NONE, "DI", nil},
			{c.call_P_off_nn, OP_WORD, "CALL P,(0%04Xh)", nil},
			{c.push_AF, OP_NONE, "PUSH AF", nil},
			{c.or_n, OP_BYTE, "OR 0%02Xh", nil},
			{c.rst_30H, OP_NONE, "RST 30H", nil},
			{c.ret_M, OP_NONE, "RET M", nil},
			{c.ld_SP_HL, OP_NONE, "LD SP,HL", nil},
			{c.jp_M_off_nn, OP_WORD, "JP M,(0%04Xh)", nil},
			{c.ei, OP_NONE, "EI", nil},
			{c.call_M_off_nn, OP_WORD, "CALL M,(0%04Xh)", nil},
			{nil, OP_NONE, "", &c.opcodes_FD},
			{c.cp_n, OP_BYTE, "CP 0%02Xh", nil},
			{c.rst_38H, OP_NONE, "RST 38H", nil}}}
	c.opcodes_CB = Z80OpcodeTable{
		0,
		[256]Z80OpcodeEntry{
			{c.rlc_B, OP_NONE, "RLC B", nil},
			{c.rlc_C, OP_NONE, "RLC C", nil},
			{c.rlc_D, OP_NONE, "RLC D", nil},
			{c.rlc_E, OP_NONE, "RLC E", nil},
			{c.rlc_H, OP_NONE, "RLC H", nil},
			{c.rlc_L, OP_NONE, "RLC L", nil},
			{c.rlc_off_HL, OP_NONE, "RLC (HL)", nil},
			{c.rlc_A, OP_NONE, "RLC A", nil},
			{c.rrc_B, OP_NONE, "RRC B", nil},
			{c.rrc_C, OP_NONE, "RRC C", nil},
			{c.rrc_D, OP_NONE, "RRC D", nil},
			{c.rrc_E, OP_NONE, "RRC E", nil},
			{c.rrc_H, OP_NONE, "RRC H", nil},
			{c.rrc_L, OP_NONE, "RRC L", nil},
			{c.rrc_off_HL, OP_NONE, "RRC (HL)", nil},
			{c.rrc_A, OP_NONE, "RRC A", nil},
			{c.rl_B, OP_NONE, "RL B", nil},
			{c.rl_C, OP_NONE, "RL C", nil},
			{c.rl_D, OP_NONE, "RL D", nil},
			{c.rl_E, OP_NONE, "RL E", nil},
			{c.rl_H, OP_NONE, "RL H", nil},
			{c.rl_L, OP_NONE, "RL L", nil},
			{c.rl_off_HL, OP_NONE, "RL (HL)", nil},
			{c.rl_A, OP_NONE, "RL A", nil},
			{c.rr_B, OP_NONE, "RR B", nil},
			{c.rr_C, OP_NONE, "RR C", nil},
			{c.rr_D, OP_NONE, "RR D", nil},
			{c.rr_E, OP_NONE, "RR E", nil},
			{c.rr_H, OP_NONE, "RR H", nil},
			{c.rr_L, OP_NONE, "RR L", nil},
			{c.rr_off_HL, OP_NONE, "RR (HL)", nil},
			{c.rr_A, OP_NONE, "RR A", nil},
			{c.sla_B, OP_NONE, "SLA B", nil},
			{c.sla_C, OP_NONE, "SLA C", nil},
			{c.sla_D, OP_NONE, "SLA D", nil},
			{c.sla_E, OP_NONE, "SLA E", nil},
			{c.sla_H, OP_NONE, "SLA H", nil},
			{c.sla_L, OP_NONE, "SLA L", nil},
			{c.sla_off_HL, OP_NONE, "SLA (HL)", nil},
			{c.sla_A, OP_NONE, "SLA A", nil},
			{c.sra_B, OP_NONE, "SRA B", nil},
			{c.sra_C, OP_NONE, "SRA C", nil},
			{c.sra_D, OP_NONE, "SRA D", nil},
			{c.sra_E, OP_NONE, "SRA E", nil},
			{c.sra_H, OP_NONE, "SRA H", nil},
			{c.sra_L, OP_NONE, "SRA L", nil},
			{c.sra_off_HL, OP_NONE, "SRA (HL)", nil},
			{c.sra_A, OP_NONE, "SRA A", nil},
			{c.sll_B, OP_NONE, "SLL B", nil},
			{c.sll_C, OP_NONE, "SLL C", nil},
			{c.sll_D, OP_NONE, "SLL D", nil},
			{c.sll_E, OP_NONE, "SLL E", nil},
			{c.sll_H, OP_NONE, "SLL H", nil},
			{c.sll_L, OP_NONE, "SLL L", nil},
			{c.sll_off_HL, OP_NONE, "SLL (HL)", nil},
			{c.sll_A, OP_NONE, "SLL A", nil},
			{c.srl_B, OP_NONE, "SRL B", nil},
			{c.srl_C, OP_NONE, "SRL C", nil},
			{c.srl_D, OP_NONE, "SRL D", nil},
			{c.srl_E, OP_NONE, "SRL E", nil},
			{c.srl_H, OP_NONE, "SRL H", nil},
			{c.srl_L, OP_NONE, "SRL L", nil},
			{c.srl_off_HL, OP_NONE, "SRL (HL)", nil},
			{c.srl_A, OP_NONE, "SRL A", nil},
			{c.bit_0_B, OP_NONE, "BIT 0,B", nil},
			{c.bit_0_C, OP_NONE, "BIT 0,C", nil},
			{c.bit_0_D, OP_NONE, "BIT 0,D", nil},
			{c.bit_0_E, OP_NONE, "BIT 0,E", nil},
			{c.bit_0_H, OP_NONE, "BIT 0,H", nil},
			{c.bit_0_L, OP_NONE, "BIT 0,L", nil},
			{c.bit_0_off_HL, OP_NONE, "BIT 0,(HL)", nil},
			{c.bit_0_A, OP_NONE, "BIT 0,A", nil},
			{c.bit_1_B, OP_NONE, "BIT 1,B", nil},
			{c.bit_1_C, OP_NONE, "BIT 1,C", nil},
			{c.bit_1_D, OP_NONE, "BIT 1,D", nil},
			{c.bit_1_E, OP_NONE, "BIT 1,E", nil},
			{c.bit_1_H, OP_NONE, "BIT 1,H", nil},
			{c.bit_1_L, OP_NONE, "BIT 1,L", nil},
			{c.bit_1_off_HL, OP_NONE, "BIT 1,(HL)", nil},
			{c.bit_1_A, OP_NONE, "BIT 1,A", nil},
			{c.bit_2_B, OP_NONE, "BIT 2,B", nil},
			{c.bit_2_C, OP_NONE, "BIT 2,C", nil},
			{c.bit_2_D, OP_NONE, "BIT 2,D", nil},
			{c.bit_2_E, OP_NONE, "BIT 2,E", nil},
			{c.bit_2_H, OP_NONE, "BIT 2,H", nil},
			{c.bit_2_L, OP_NONE, "BIT 2,L", nil},
			{c.bit_2_off_HL, OP_NONE, "BIT 2,(HL)", nil},
			{c.bit_2_A, OP_NONE, "BIT 2,A", nil},
			{c.bit_3_B, OP_NONE, "BIT 3,B", nil},
			{c.bit_3_C, OP_NONE, "BIT 3,C", nil},
			{c.bit_3_D, OP_NONE, "BIT 3,D", nil},
			{c.bit_3_E, OP_NONE, "BIT 3,E", nil},
			{c.bit_3_H, OP_NONE, "BIT 3,H", nil},
			{c.bit_3_L, OP_NONE, "BIT 3,L", nil},
			{c.bit_3_off_HL, OP_NONE, "BIT 3,(HL)", nil},
			{c.bit_3_A, OP_NONE, "BIT 3,A", nil},
			{c.bit_4_B, OP_NONE, "BIT 4,B", nil},
			{c.bit_4_C, OP_NONE, "BIT 4,C", nil},
			{c.bit_4_D, OP_NONE, "BIT 4,D", nil},
			{c.bit_4_E, OP_NONE, "BIT 4,E", nil},
			{c.bit_4_H, OP_NONE, "BIT 4,H", nil},
			{c.bit_4_L, OP_NONE, "BIT 4,L", nil},
			{c.bit_4_off_HL, OP_NONE, "BIT 4,(HL)", nil},
			{c.bit_4_A, OP_NONE, "BIT 4,A", nil},
			{c.bit_5_B, OP_NONE, "BIT 5,B", nil},
			{c.bit_5_C, OP_NONE, "BIT 5,C", nil},
			{c.bit_5_D, OP_NONE, "BIT 5,D", nil},
			{c.bit_5_E, OP_NONE, "BIT 5,E", nil},
			{c.bit_5_H, OP_NONE, "BIT 5,H", nil},
			{c.bit_5_L, OP_NONE, "BIT 5,L", nil},
			{c.bit_5_off_HL, OP_NONE, "BIT 5,(HL)", nil},
			{c.bit_5_A, OP_NONE, "BIT 5,A", nil},
			{c.bit_6_B, OP_NONE, "BIT 6,B", nil},
			{c.bit_6_C, OP_NONE, "BIT 6,C", nil},
			{c.bit_6_D, OP_NONE, "BIT 6,D", nil},
			{c.bit_6_E, OP_NONE, "BIT 6,E", nil},
			{c.bit_6_H, OP_NONE, "BIT 6,H", nil},
			{c.bit_6_L, OP_NONE, "BIT 6,L", nil},
			{c.bit_6_off_HL, OP_NONE, "BIT 6,(HL)", nil},
			{c.bit_6_A, OP_NONE, "BIT 6,A", nil},
			{c.bit_7_B, OP_NONE, "BIT 7,B", nil},
			{c.bit_7_C, OP_NONE, "BIT 7,C", nil},
			{c.bit_7_D, OP_NONE, "BIT 7,D", nil},
			{c.bit_7_E, OP_NONE, "BIT 7,E", nil},
			{c.bit_7_H, OP_NONE, "BIT 7,H", nil},
			{c.bit_7_L, OP_NONE, "BIT 7,L", nil},
			{c.bit_7_off_HL, OP_NONE, "BIT 7,(HL)", nil},
			{c.bit_7_A, OP_NONE, "BIT 7,A", nil},
			{c.res_0_B, OP_NONE, "RES 0,B", nil},
			{c.res_0_C, OP_NONE, "RES 0,C", nil},
			{c.res_0_D, OP_NONE, "RES 0,D", nil},
			{c.res_0_E, OP_NONE, "RES 0,E", nil},
			{c.res_0_H, OP_NONE, "RES 0,H", nil},
			{c.res_0_L, OP_NONE, "RES 0,L", nil},
			{c.res_0_off_HL, OP_NONE, "RES 0,(HL)", nil},
			{c.res_0_A, OP_NONE, "RES 0,A", nil},
			{c.res_1_B, OP_NONE, "RES 1,B", nil},
			{c.res_1_C, OP_NONE, "RES 1,C", nil},
			{c.res_1_D, OP_NONE, "RES 1,D", nil},
			{c.res_1_E, OP_NONE, "RES 1,E", nil},
			{c.res_1_H, OP_NONE, "RES 1,H", nil},
			{c.res_1_L, OP_NONE, "RES 1,L", nil},
			{c.res_1_off_HL, OP_NONE, "RES 1,(HL)", nil},
			{c.res_1_A, OP_NONE, "RES 1,A", nil},
			{c.res_2_B, OP_NONE, "RES 2,B", nil},
			{c.res_2_C, OP_NONE, "RES 2,C", nil},
			{c.res_2_D, OP_NONE, "RES 2,D", nil},
			{c.res_2_E, OP_NONE, "RES 2,E", nil},
			{c.res_2_H, OP_NONE, "RES 2,H", nil},
			{c.res_2_L, OP_NONE, "RES 2,L", nil},
			{c.res_2_off_HL, OP_NONE, "RES 2,(HL)", nil},
			{c.res_2_A, OP_NONE, "RES 2,A", nil},
			{c.res_3_B, OP_NONE, "RES 3,B", nil},
			{c.res_3_C, OP_NONE, "RES 3,C", nil},
			{c.res_3_D, OP_NONE, "RES 3,D", nil},
			{c.res_3_E, OP_NONE, "RES 3,E", nil},
			{c.res_3_H, OP_NONE, "RES 3,H", nil},
			{c.res_3_L, OP_NONE, "RES 3,L", nil},
			{c.res_3_off_HL, OP_NONE, "RES 3,(HL)", nil},
			{c.res_3_A, OP_NONE, "RES 3,A", nil},
			{c.res_4_B, OP_NONE, "RES 4,B", nil},
			{c.res_4_C, OP_NONE, "RES 4,C", nil},
			{c.res_4_D, OP_NONE, "RES 4,D", nil},
			{c.res_4_E, OP_NONE, "RES 4,E", nil},
			{c.res_4_H, OP_NONE, "RES 4,H", nil},
			{c.res_4_L, OP_NONE, "RES 4,L", nil},
			{c.res_4_off_HL, OP_NONE, "RES 4,(HL)", nil},
			{c.res_4_A, OP_NONE, "RES 4,A", nil},
			{c.res_5_B, OP_NONE, "RES 5,B", nil},
			{c.res_5_C, OP_NONE, "RES 5,C", nil},
			{c.res_5_D, OP_NONE, "RES 5,D", nil},
			{c.res_5_E, OP_NONE, "RES 5,E", nil},
			{c.res_5_H, OP_NONE, "RES 5,H", nil},
			{c.res_5_L, OP_NONE, "RES 5,L", nil},
			{c.res_5_off_HL, OP_NONE, "RES 5,(HL)", nil},
			{c.res_5_A, OP_NONE, "RES 5,A", nil},
			{c.res_6_B, OP_NONE, "RES 6,B", nil},
			{c.res_6_C, OP_NONE, "RES 6,C", nil},
			{c.res_6_D, OP_NONE, "RES 6,D", nil},
			{c.res_6_E, OP_NONE, "RES 6,E", nil},
			{c.res_6_H, OP_NONE, "RES 6,H", nil},
			{c.res_6_L, OP_NONE, "RES 6,L", nil},
			{c.res_6_off_HL, OP_NONE, "RES 6,(HL)", nil},
			{c.res_6_A, OP_NONE, "RES 6,A", nil},
			{c.res_7_B, OP_NONE, "RES 7,B", nil},
			{c.res_7_C, OP_NONE, "RES 7,C", nil},
			{c.res_7_D, OP_NONE, "RES 7,D", nil},
			{c.res_7_E, OP_NONE, "RES 7,E", nil},
			{c.res_7_H, OP_NONE, "RES 7,H", nil},
			{c.res_7_L, OP_NONE, "RES 7,L", nil},
			{c.res_7_off_HL, OP_NONE, "RES 7,(HL)", nil},
			{c.res_7_A, OP_NONE, "RES 7,A", nil},
			{c.set_0_B, OP_NONE, "SET 0,B", nil},
			{c.set_0_C, OP_NONE, "SET 0,C", nil},
			{c.set_0_D, OP_NONE, "SET 0,D", nil},
			{c.set_0_E, OP_NONE, "SET 0,E", nil},
			{c.set_0_H, OP_NONE, "SET 0,H", nil},
			{c.set_0_L, OP_NONE, "SET 0,L", nil},
			{c.set_0_off_HL, OP_NONE, "SET 0,(HL)", nil},
			{c.set_0_A, OP_NONE, "SET 0,A", nil},
			{c.set_1_B, OP_NONE, "SET 1,B", nil},
			{c.set_1_C, OP_NONE, "SET 1,C", nil},
			{c.set_1_D, OP_NONE, "SET 1,D", nil},
			{c.set_1_E, OP_NONE, "SET 1,E", nil},
			{c.set_1_H, OP_NONE, "SET 1,H", nil},
			{c.set_1_L, OP_NONE, "SET 1,L", nil},
			{c.set_1_off_HL, OP_NONE, "SET 1,(HL)", nil},
			{c.set_1_A, OP_NONE, "SET 1,A", nil},
			{c.set_2_B, OP_NONE, "SET 2,B", nil},
			{c.set_2_C, OP_NONE, "SET 2,C", nil},
			{c.set_2_D, OP_NONE, "SET 2,D", nil},
			{c.set_2_E, OP_NONE, "SET 2,E", nil},
			{c.set_2_H, OP_NONE, "SET 2,H", nil},
			{c.set_2_L, OP_NONE, "SET 2,L", nil},
			{c.set_2_off_HL, OP_NONE, "SET 2,(HL)", nil},
			{c.set_2_A, OP_NONE, "SET 2,A", nil},
			{c.set_3_B, OP_NONE, "SET 3,B", nil},
			{c.set_3_C, OP_NONE, "SET 3,C", nil},
			{c.set_3_D, OP_NONE, "SET 3,D", nil},
			{c.set_3_E, OP_NONE, "SET 3,E", nil},
			{c.set_3_H, OP_NONE, "SET 3,H", nil},
			{c.set_3_L, OP_NONE, "SET 3,L", nil},
			{c.set_3_off_HL, OP_NONE, "SET 3,(HL)", nil},
			{c.set_3_A, OP_NONE, "SET 3,A", nil},
			{c.set_4_B, OP_NONE, "SET 4,B", nil},
			{c.set_4_C, OP_NONE, "SET 4,C", nil},
			{c.set_4_D, OP_NONE, "SET 4,D", nil},
			{c.set_4_E, OP_NONE, "SET 4,E", nil},
			{c.set_4_H, OP_NONE, "SET 4,H", nil},
			{c.set_4_L, OP_NONE, "SET 4,L", nil},
			{c.set_4_off_HL, OP_NONE, "SET 4,(HL)", nil},
			{c.set_4_A, OP_NONE, "SET 4,A", nil},
			{c.set_5_B, OP_NONE, "SET 5,B", nil},
			{c.set_5_C, OP_NONE, "SET 5,C", nil},
			{c.set_5_D, OP_NONE, "SET 5,D", nil},
			{c.set_5_E, OP_NONE, "SET 5,E", nil},
			{c.set_5_H, OP_NONE, "SET 5,H", nil},
			{c.set_5_L, OP_NONE, "SET 5,L", nil},
			{c.set_5_off_HL, OP_NONE, "SET 5,(HL)", nil},
			{c.set_5_A, OP_NONE, "SET 5,A", nil},
			{c.set_6_B, OP_NONE, "SET 6,B", nil},
			{c.set_6_C, OP_NONE, "SET 6,C", nil},
			{c.set_6_D, OP_NONE, "SET 6,D", nil},
			{c.set_6_E, OP_NONE, "SET 6,E", nil},
			{c.set_6_H, OP_NONE, "SET 6,H", nil},
			{c.set_6_L, OP_NONE, "SET 6,L", nil},
			{c.set_6_off_HL, OP_NONE, "SET 6,(HL)", nil},
			{c.set_6_A, OP_NONE, "SET 6,A", nil},
			{c.set_7_B, OP_NONE, "SET 7,B", nil},
			{c.set_7_C, OP_NONE, "SET 7,C", nil},
			{c.set_7_D, OP_NONE, "SET 7,D", nil},
			{c.set_7_E, OP_NONE, "SET 7,E", nil},
			{c.set_7_H, OP_NONE, "SET 7,H", nil},
			{c.set_7_L, OP_NONE, "SET 7,L", nil},
			{c.set_7_off_HL, OP_NONE, "SET 7,(HL)", nil},
			{c.set_7_A, OP_NONE, "SET 7,A", nil}}}
	c.opcodes_DD = Z80OpcodeTable{
		0,
		[256]Z80OpcodeEntry{
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.add_IX_BC, OP_NONE, "ADD IX,BC", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.add_IX_DE, OP_NONE, "ADD IX,DE", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_IX_nn, OP_WORD, "LD IX,0%04Xh", nil},
			{c.ld_off_nn_IX, OP_WORD, "LD (0%04Xh),IX", nil},
			{c.inc_IX, OP_NONE, "INC IX", nil},
			{c.inc_IXh, OP_NONE, "INC IXh", nil},
			{c.dec_IXh, OP_NONE, "DEC IXh", nil},
			{c.ld_IXh_n, OP_BYTE, "LD IXh,0%02Xh", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.add_IX_IX, OP_NONE, "ADD IX,IX", nil},
			{c.ld_IX_off_nn, OP_WORD, "LD IX,(0%04Xh)", nil},
			{c.dec_IX, OP_NONE, "DEC IX", nil},
			{c.inc_IXl, OP_NONE, "INC IXl", nil},
			{c.dec_IXl, OP_NONE, "DEC IXl", nil},
			{c.ld_IXl_n, OP_BYTE, "LD IXl,0%02Xh", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.inc_off_IX_d, OP_BYTE, "INC (IX+0%02Xh)", nil},
			{c.dec_off_IX_d, OP_BYTE, "DEC (IX+0%02Xh)", nil},
			{c.ld_off_IX_d_n, OP_BYTE, "LD (IX+0%02Xh),0%02Xh", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.add_IX_SP, OP_NONE, "ADD IX,SP", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_B_IXh, OP_NONE, "LD B,IXh", nil},
			{c.ld_B_IXl, OP_NONE, "LD B,IXl", nil},
			{c.ld_B_off_IX_d, OP_BYTE, "LD B,(IX+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_C_IXh, OP_NONE, "LD C,IXh", nil},
			{c.ld_C_IXl, OP_NONE, "LD C,IXl", nil},
			{c.ld_C_off_IX_d, OP_BYTE, "LD C,(IX+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_D_IXh, OP_NONE, "LD D,IXh", nil},
			{c.ld_D_IXl, OP_NONE, "LD D,IXl", nil},
			{c.ld_D_off_IX_d, OP_BYTE, "LD D,(IX+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_E_IXh, OP_NONE, "LD E,IXh", nil},
			{c.ld_E_IXl, OP_NONE, "LD E,IXl", nil},
			{c.ld_E_off_IX_d, OP_BYTE, "LD E,(IX+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_IXh_B, OP_NONE, "LD IXh,B", nil},
			{c.ld_IXh_C, OP_NONE, "LD IXh,C", nil},
			{c.ld_IXh_D, OP_NONE, "LD IXh,D", nil},
			{c.ld_IXh_E, OP_NONE, "LD IXh,E", nil},
			{c.ld_IXh_IXh, OP_NONE, "LD IXh,IXh", nil},
			{c.ld_IXh_IXl, OP_NONE, "LD IXh,IXl", nil},
			{c.ld_H_off_IX_d, OP_BYTE, "LD H,(IX+0%02Xh)", nil},
			{c.ld_IXh_A, OP_NONE, "LD IXh,A", nil},
			{c.ld_IXl_B, OP_NONE, "LD IXl,B", nil},
			{c.ld_IXl_C, OP_NONE, "LD IXl,C", nil},
			{c.ld_IXl_D, OP_NONE, "LD IXl,D", nil},
			{c.ld_IXl_E, OP_NONE, "LD IXl,E", nil},
			{c.ld_IXl_IXh, OP_NONE, "LD IXl,IXh", nil},
			{c.ld_IXl_IXl, OP_NONE, "LD IXl,IXl", nil},
			{c.ld_L_off_IX_d, OP_BYTE, "LD L,(IX+0%02Xh)", nil},
			{c.ld_IXl_A, OP_NONE, "LD IXl,A", nil},
			{c.ld_off_IX_d_B, OP_BYTE, "LD (IX+0%02Xh),B", nil},
			{c.ld_off_IX_d_C, OP_BYTE, "LD (IX+0%02Xh),C", nil},
			{c.ld_off_IX_d_D, OP_BYTE, "LD (IX+0%02Xh),D", nil},
			{c.ld_off_IX_d_E, OP_BYTE, "LD (IX+0%02Xh),E", nil},
			{c.ld_off_IX_d_H, OP_BYTE, "LD (IX+0%02Xh),H", nil},
			{c.ld_off_IX_d_L, OP_BYTE, "LD (IX+0%02Xh),L", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_off_IX_d_A, OP_BYTE, "LD (IX+0%02Xh),A", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_A_IXh, OP_NONE, "LD A,IXh", nil},
			{c.ld_A_IXl, OP_NONE, "LD A,IXl", nil},
			{c.ld_A_off_IX_d, OP_BYTE, "LD A,(IX+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.add_A_IXh, OP_NONE, "ADD A,IXh", nil},
			{c.add_A_IXl, OP_NONE, "ADD A,IXl", nil},
			{c.add_A_off_IX_d, OP_BYTE, "ADD A,(IX+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.adc_A_IXh, OP_NONE, "ADC A,IXh", nil},
			{c.adc_A_IXl, OP_NONE, "ADC A,IXl", nil},
			{c.adc_A_off_IX_d, OP_BYTE, "ADC A,(IX+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.sub_A_IXh, OP_NONE, "SUB A,IXh", nil},
			{c.sub_A_IXl, OP_NONE, "SUB A,IXl", nil},
			{c.sub_A_off_IX_d, OP_BYTE, "SUB A,(IX+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.sbc_A_IXh, OP_NONE, "SBC A,IXh", nil},
			{c.sbc_A_IXl, OP_NONE, "SBC A,IXl", nil},
			{c.sbc_A_off_IX_d, OP_BYTE, "SBC A,(IX+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.and_IXh, OP_NONE, "AND IXh", nil},
			{c.and_IXl, OP_NONE, "AND IXl", nil},
			{c.and_off_IX_d, OP_BYTE, "AND (IX+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.xor_IXh, OP_NONE, "XOR IXh", nil},
			{c.xor_IXl, OP_NONE, "XOR IXl", nil},
			{c.xor_off_IX_d, OP_BYTE, "XOR (IX+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.or_IXh, OP_NONE, "OR IXh", nil},
			{c.or_IXl, OP_NONE, "OR IXl", nil},
			{c.or_off_IX_d, OP_BYTE, "OR (IX+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.cp_IXh, OP_NONE, "CP IXh", nil},
			{c.cp_IXl, OP_NONE, "CP IXl", nil},
			{c.cp_off_IX_d, OP_BYTE, "CP (IX+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", &c.opcodes_DDCB},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.pop_IX, OP_NONE, "POP IX", nil},
			{nil, OP_NONE, "", nil},
			{c.ex_off_SP_IX, OP_NONE, "EX (SP),IX", nil},
			{nil, OP_NONE, "", nil},
			{c.push_IX, OP_NONE, "PUSH IX", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.jp_off_IX, OP_NONE, "JP (IX)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_SP_IX, OP_NONE, "LD SP,IX", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil}}}
	c.opcodes_DDCB = Z80OpcodeTable{
		1,
		[256]Z80OpcodeEntry{
			{c.ld_B_RLC_off_IX_d, OP_BYTE, "LD B,RLC (IX+0%02Xh)", nil},
			{c.ld_C_RLC_off_IX_d, OP_BYTE, "LD C,RLC (IX+0%02Xh)", nil},
			{c.ld_D_RLC_off_IX_d, OP_BYTE, "LD D,RLC (IX+0%02Xh)", nil},
			{c.ld_E_RLC_off_IX_d, OP_BYTE, "LD E,RLC (IX+0%02Xh)", nil},
			{c.ld_H_RLC_off_IX_d, OP_BYTE, "LD H,RLC (IX+0%02Xh)", nil},
			{c.ld_L_RLC_off_IX_d, OP_BYTE, "LD L,RLC (IX+0%02Xh)", nil},
			{c.rlc_off_IX_d, OP_BYTE, "RLC (IX+0%02Xh)", nil},
			{c.ld_A_RLC_off_IX_d, OP_BYTE, "LD A,RLC (IX+0%02Xh)", nil},
			{c.ld_B_RRC_off_IX_d, OP_BYTE, "LD B,RRC (IX+0%02Xh)", nil},
			{c.ld_C_RRC_off_IX_d, OP_BYTE, "LD C,RRC (IX+0%02Xh)", nil},
			{c.ld_D_RRC_off_IX_d, OP_BYTE, "LD D,RRC (IX+0%02Xh)", nil},
			{c.ld_E_RRC_off_IX_d, OP_BYTE, "LD E,RRC (IX+0%02Xh)", nil},
			{c.ld_H_RRC_off_IX_d, OP_BYTE, "LD H,RRC (IX+0%02Xh)", nil},
			{c.ld_L_RRC_off_IX_d, OP_BYTE, "LD L,RRC (IX+0%02Xh)", nil},
			{c.rrc_off_IX_d, OP_BYTE, "RRC (IX+0%02Xh)", nil},
			{c.ld_A_RRC_off_IX_d, OP_BYTE, "LD A,RRC (IX+0%02Xh)", nil},
			{c.ld_B_RL_off_IX_d, OP_BYTE, "LD B,RL (IX+0%02Xh)", nil},
			{c.ld_C_RL_off_IX_d, OP_BYTE, "LD C,RL (IX+0%02Xh)", nil},
			{c.ld_D_RL_off_IX_d, OP_BYTE, "LD D,RL (IX+0%02Xh)", nil},
			{c.ld_E_RL_off_IX_d, OP_BYTE, "LD E,RL (IX+0%02Xh)", nil},
			{c.ld_H_RL_off_IX_d, OP_BYTE, "LD H,RL (IX+0%02Xh)", nil},
			{c.ld_L_RL_off_IX_d, OP_BYTE, "LD L,RL (IX+0%02Xh)", nil},
			{c.rl_off_IX_d, OP_BYTE, "RL (IX+0%02Xh)", nil},
			{c.ld_A_RL_off_IX_d, OP_BYTE, "LD A,RL (IX+0%02Xh)", nil},
			{c.ld_B_RR_off_IX_d, OP_BYTE, "LD B,RR (IX+0%02Xh)", nil},
			{c.ld_C_RR_off_IX_d, OP_BYTE, "LD C,RR (IX+0%02Xh)", nil},
			{c.ld_D_RR_off_IX_d, OP_BYTE, "LD D,RR (IX+0%02Xh)", nil},
			{c.ld_E_RR_off_IX_d, OP_BYTE, "LD E,RR (IX+0%02Xh)", nil},
			{c.ld_H_RR_off_IX_d, OP_BYTE, "LD H,RR (IX+0%02Xh)", nil},
			{c.ld_L_RR_off_IX_d, OP_BYTE, "LD L,RR (IX+0%02Xh)", nil},
			{c.rr_off_IX_d, OP_BYTE, "RR (IX+0%02Xh)", nil},
			{c.ld_A_RR_off_IX_d, OP_BYTE, "LD A,RR (IX+0%02Xh)", nil},
			{c.ld_B_SLA_off_IX_d, OP_BYTE, "LD B,SLA (IX+0%02Xh)", nil},
			{c.ld_C_SLA_off_IX_d, OP_BYTE, "LD C,SLA (IX+0%02Xh)", nil},
			{c.ld_D_SLA_off_IX_d, OP_BYTE, "LD D,SLA (IX+0%02Xh)", nil},
			{c.ld_E_SLA_off_IX_d, OP_BYTE, "LD E,SLA (IX+0%02Xh)", nil},
			{c.ld_H_SLA_off_IX_d, OP_BYTE, "LD H,SLA (IX+0%02Xh)", nil},
			{c.ld_L_SLA_off_IX_d, OP_BYTE, "LD L,SLA (IX+0%02Xh)", nil},
			{c.sla_off_IX_d, OP_BYTE, "SLA (IX+0%02Xh)", nil},
			{c.ld_A_SLA_off_IX_d, OP_BYTE, "LD A,SLA (IX+0%02Xh)", nil},
			{c.ld_B_SRA_off_IX_d, OP_BYTE, "LD B,SRA (IX+0%02Xh)", nil},
			{c.ld_C_SRA_off_IX_d, OP_BYTE, "LD C,SRA (IX+0%02Xh)", nil},
			{c.ld_D_SRA_off_IX_d, OP_BYTE, "LD D,SRA (IX+0%02Xh)", nil},
			{c.ld_E_SRA_off_IX_d, OP_BYTE, "LD E,SRA (IX+0%02Xh)", nil},
			{c.ld_H_SRA_off_IX_d, OP_BYTE, "LD H,SRA (IX+0%02Xh)", nil},
			{c.ld_L_SRA_off_IX_d, OP_BYTE, "LD L,SRA (IX+0%02Xh)", nil},
			{c.sra_off_IX_d, OP_BYTE, "SRA (IX+0%02Xh)", nil},
			{c.ld_A_SRA_off_IX_d, OP_BYTE, "LD A,SRA (IX+0%02Xh)", nil},
			{c.ld_B_SLL_off_IX_d, OP_BYTE, "LD B,SLL (IX+0%02Xh)", nil},
			{c.ld_C_SLL_off_IX_d, OP_BYTE, "LD C,SLL (IX+0%02Xh)", nil},
			{c.ld_D_SLL_off_IX_d, OP_BYTE, "LD D,SLL (IX+0%02Xh)", nil},
			{c.ld_E_SLL_off_IX_d, OP_BYTE, "LD E,SLL (IX+0%02Xh)", nil},
			{c.ld_H_SLL_off_IX_d, OP_BYTE, "LD H,SLL (IX+0%02Xh)", nil},
			{c.ld_L_SLL_off_IX_d, OP_BYTE, "LD L,SLL (IX+0%02Xh)", nil},
			{c.sll_off_IX_d, OP_BYTE, "SLL (IX+0%02Xh)", nil},
			{c.ld_A_SLL_off_IX_d, OP_BYTE, "LD A,SLL (IX+0%02Xh)", nil},
			{c.ld_B_SRL_off_IX_d, OP_BYTE, "LD B,SRL (IX+0%02Xh)", nil},
			{c.ld_C_SRL_off_IX_d, OP_BYTE, "LD C,SRL (IX+0%02Xh)", nil},
			{c.ld_D_SRL_off_IX_d, OP_BYTE, "LD D,SRL (IX+0%02Xh)", nil},
			{c.ld_E_SRL_off_IX_d, OP_BYTE, "LD E,SRL (IX+0%02Xh)", nil},
			{c.ld_H_SRL_off_IX_d, OP_BYTE, "LD H,SRL (IX+0%02Xh)", nil},
			{c.ld_L_SRL_off_IX_d, OP_BYTE, "LD L,SRL (IX+0%02Xh)", nil},
			{c.srl_off_IX_d, OP_BYTE, "SRL (IX+0%02Xh)", nil},
			{c.ld_A_SRL_off_IX_d, OP_BYTE, "LD A,SRL (IX+0%02Xh)", nil},
			{c.bit_0_off_IX_d, OP_BYTE, "BIT 0,(IX+0%02Xh)", nil},
			{c.bit_0_off_IX_d, OP_BYTE, "BIT 0,(IX+0%02Xh)", nil},
			{c.bit_0_off_IX_d, OP_BYTE, "BIT 0,(IX+0%02Xh)", nil},
			{c.bit_0_off_IX_d, OP_BYTE, "BIT 0,(IX+0%02Xh)", nil},
			{c.bit_0_off_IX_d, OP_BYTE, "BIT 0,(IX+0%02Xh)", nil},
			{c.bit_0_off_IX_d, OP_BYTE, "BIT 0,(IX+0%02Xh)", nil},
			{c.bit_0_off_IX_d, OP_BYTE, "BIT 0,(IX+0%02Xh)", nil},
			{c.bit_0_off_IX_d, OP_BYTE, "BIT 0,(IX+0%02Xh)", nil},
			{c.bit_1_off_IX_d, OP_BYTE, "BIT 1,(IX+0%02Xh)", nil},
			{c.bit_1_off_IX_d, OP_BYTE, "BIT 1,(IX+0%02Xh)", nil},
			{c.bit_1_off_IX_d, OP_BYTE, "BIT 1,(IX+0%02Xh)", nil},
			{c.bit_1_off_IX_d, OP_BYTE, "BIT 1,(IX+0%02Xh)", nil},
			{c.bit_1_off_IX_d, OP_BYTE, "BIT 1,(IX+0%02Xh)", nil},
			{c.bit_1_off_IX_d, OP_BYTE, "BIT 1,(IX+0%02Xh)", nil},
			{c.bit_1_off_IX_d, OP_BYTE, "BIT 1,(IX+0%02Xh)", nil},
			{c.bit_1_off_IX_d, OP_BYTE, "BIT 1,(IX+0%02Xh)", nil},
			{c.bit_2_off_IX_d, OP_BYTE, "BIT 2,(IX+0%02Xh)", nil},
			{c.bit_2_off_IX_d, OP_BYTE, "BIT 2,(IX+0%02Xh)", nil},
			{c.bit_2_off_IX_d, OP_BYTE, "BIT 2,(IX+0%02Xh)", nil},
			{c.bit_2_off_IX_d, OP_BYTE, "BIT 2,(IX+0%02Xh)", nil},
			{c.bit_2_off_IX_d, OP_BYTE, "BIT 2,(IX+0%02Xh)", nil},
			{c.bit_2_off_IX_d, OP_BYTE, "BIT 2,(IX+0%02Xh)", nil},
			{c.bit_2_off_IX_d, OP_BYTE, "BIT 2,(IX+0%02Xh)", nil},
			{c.bit_2_off_IX_d, OP_BYTE, "BIT 2,(IX+0%02Xh)", nil},
			{c.bit_3_off_IX_d, OP_BYTE, "BIT 3,(IX+0%02Xh)", nil},
			{c.bit_3_off_IX_d, OP_BYTE, "BIT 3,(IX+0%02Xh)", nil},
			{c.bit_3_off_IX_d, OP_BYTE, "BIT 3,(IX+0%02Xh)", nil},
			{c.bit_3_off_IX_d, OP_BYTE, "BIT 3,(IX+0%02Xh)", nil},
			{c.bit_3_off_IX_d, OP_BYTE, "BIT 3,(IX+0%02Xh)", nil},
			{c.bit_3_off_IX_d, OP_BYTE, "BIT 3,(IX+0%02Xh)", nil},
			{c.bit_3_off_IX_d, OP_BYTE, "BIT 3,(IX+0%02Xh)", nil},
			{c.bit_3_off_IX_d, OP_BYTE, "BIT 3,(IX+0%02Xh)", nil},
			{c.bit_4_off_IX_d, OP_BYTE, "BIT 4,(IX+0%02Xh)", nil},
			{c.bit_4_off_IX_d, OP_BYTE, "BIT 4,(IX+0%02Xh)", nil},
			{c.bit_4_off_IX_d, OP_BYTE, "BIT 4,(IX+0%02Xh)", nil},
			{c.bit_4_off_IX_d, OP_BYTE, "BIT 4,(IX+0%02Xh)", nil},
			{c.bit_4_off_IX_d, OP_BYTE, "BIT 4,(IX+0%02Xh)", nil},
			{c.bit_4_off_IX_d, OP_BYTE, "BIT 4,(IX+0%02Xh)", nil},
			{c.bit_4_off_IX_d, OP_BYTE, "BIT 4,(IX+0%02Xh)", nil},
			{c.bit_4_off_IX_d, OP_BYTE, "BIT 4,(IX+0%02Xh)", nil},
			{c.bit_5_off_IX_d, OP_BYTE, "BIT 5,(IX+0%02Xh)", nil},
			{c.bit_5_off_IX_d, OP_BYTE, "BIT 5,(IX+0%02Xh)", nil},
			{c.bit_5_off_IX_d, OP_BYTE, "BIT 5,(IX+0%02Xh)", nil},
			{c.bit_5_off_IX_d, OP_BYTE, "BIT 5,(IX+0%02Xh)", nil},
			{c.bit_5_off_IX_d, OP_BYTE, "BIT 5,(IX+0%02Xh)", nil},
			{c.bit_5_off_IX_d, OP_BYTE, "BIT 5,(IX+0%02Xh)", nil},
			{c.bit_5_off_IX_d, OP_BYTE, "BIT 5,(IX+0%02Xh)", nil},
			{c.bit_5_off_IX_d, OP_BYTE, "BIT 5,(IX+0%02Xh)", nil},
			{c.bit_6_off_IX_d, OP_BYTE, "BIT 6,(IX+0%02Xh)", nil},
			{c.bit_6_off_IX_d, OP_BYTE, "BIT 6,(IX+0%02Xh)", nil},
			{c.bit_6_off_IX_d, OP_BYTE, "BIT 6,(IX+0%02Xh)", nil},
			{c.bit_6_off_IX_d, OP_BYTE, "BIT 6,(IX+0%02Xh)", nil},
			{c.bit_6_off_IX_d, OP_BYTE, "BIT 6,(IX+0%02Xh)", nil},
			{c.bit_6_off_IX_d, OP_BYTE, "BIT 6,(IX+0%02Xh)", nil},
			{c.bit_6_off_IX_d, OP_BYTE, "BIT 6,(IX+0%02Xh)", nil},
			{c.bit_6_off_IX_d, OP_BYTE, "BIT 6,(IX+0%02Xh)", nil},
			{c.bit_7_off_IX_d, OP_BYTE, "BIT 7,(IX+0%02Xh)", nil},
			{c.bit_7_off_IX_d, OP_BYTE, "BIT 7,(IX+0%02Xh)", nil},
			{c.bit_7_off_IX_d, OP_BYTE, "BIT 7,(IX+0%02Xh)", nil},
			{c.bit_7_off_IX_d, OP_BYTE, "BIT 7,(IX+0%02Xh)", nil},
			{c.bit_7_off_IX_d, OP_BYTE, "BIT 7,(IX+0%02Xh)", nil},
			{c.bit_7_off_IX_d, OP_BYTE, "BIT 7,(IX+0%02Xh)", nil},
			{c.bit_7_off_IX_d, OP_BYTE, "BIT 7,(IX+0%02Xh)", nil},
			{c.bit_7_off_IX_d, OP_BYTE, "BIT 7,(IX+0%02Xh)", nil},
			{c.ld_B_RES_0_off_IX_d, OP_BYTE, "LD B,RES 0,(IX+0%02Xh)", nil},
			{c.ld_C_RES_0_off_IX_d, OP_BYTE, "LD C,RES 0,(IX+0%02Xh)", nil},
			{c.ld_D_RES_0_off_IX_d, OP_BYTE, "LD D,RES 0,(IX+0%02Xh)", nil},
			{c.ld_E_RES_0_off_IX_d, OP_BYTE, "LD E,RES 0,(IX+0%02Xh)", nil},
			{c.ld_H_RES_0_off_IX_d, OP_BYTE, "LD H,RES 0,(IX+0%02Xh)", nil},
			{c.ld_L_RES_0_off_IX_d, OP_BYTE, "LD L,RES 0,(IX+0%02Xh)", nil},
			{c.res_0_off_IX_d, OP_BYTE, "RES 0,(IX+0%02Xh)", nil},
			{c.ld_A_RES_0_off_IX_d, OP_BYTE, "LD A,RES 0,(IX+0%02Xh)", nil},
			{c.ld_B_RES_1_off_IX_d, OP_BYTE, "LD B,RES 1,(IX+0%02Xh)", nil},
			{c.ld_C_RES_1_off_IX_d, OP_BYTE, "LD C,RES 1,(IX+0%02Xh)", nil},
			{c.ld_D_RES_1_off_IX_d, OP_BYTE, "LD D,RES 1,(IX+0%02Xh)", nil},
			{c.ld_E_RES_1_off_IX_d, OP_BYTE, "LD E,RES 1,(IX+0%02Xh)", nil},
			{c.ld_H_RES_1_off_IX_d, OP_BYTE, "LD H,RES 1,(IX+0%02Xh)", nil},
			{c.ld_L_RES_1_off_IX_d, OP_BYTE, "LD L,RES 1,(IX+0%02Xh)", nil},
			{c.res_1_off_IX_d, OP_BYTE, "RES 1,(IX+0%02Xh)", nil},
			{c.ld_A_RES_1_off_IX_d, OP_BYTE, "LD A,RES 1,(IX+0%02Xh)", nil},
			{c.ld_B_RES_2_off_IX_d, OP_BYTE, "LD B,RES 2,(IX+0%02Xh)", nil},
			{c.ld_C_RES_2_off_IX_d, OP_BYTE, "LD C,RES 2,(IX+0%02Xh)", nil},
			{c.ld_D_RES_2_off_IX_d, OP_BYTE, "LD D,RES 2,(IX+0%02Xh)", nil},
			{c.ld_E_RES_2_off_IX_d, OP_BYTE, "LD E,RES 2,(IX+0%02Xh)", nil},
			{c.ld_H_RES_2_off_IX_d, OP_BYTE, "LD H,RES 2,(IX+0%02Xh)", nil},
			{c.ld_L_RES_2_off_IX_d, OP_BYTE, "LD L,RES 2,(IX+0%02Xh)", nil},
			{c.res_2_off_IX_d, OP_BYTE, "RES 2,(IX+0%02Xh)", nil},
			{c.ld_A_RES_2_off_IX_d, OP_BYTE, "LD A,RES 2,(IX+0%02Xh)", nil},
			{c.ld_B_RES_3_off_IX_d, OP_BYTE, "LD B,RES 3,(IX+0%02Xh)", nil},
			{c.ld_C_RES_3_off_IX_d, OP_BYTE, "LD C,RES 3,(IX+0%02Xh)", nil},
			{c.ld_D_RES_3_off_IX_d, OP_BYTE, "LD D,RES 3,(IX+0%02Xh)", nil},
			{c.ld_E_RES_3_off_IX_d, OP_BYTE, "LD E,RES 3,(IX+0%02Xh)", nil},
			{c.ld_H_RES_3_off_IX_d, OP_BYTE, "LD H,RES 3,(IX+0%02Xh)", nil},
			{c.ld_L_RES_3_off_IX_d, OP_BYTE, "LD L,RES 3,(IX+0%02Xh)", nil},
			{c.res_3_off_IX_d, OP_BYTE, "RES 3,(IX+0%02Xh)", nil},
			{c.ld_A_RES_3_off_IX_d, OP_BYTE, "LD A,RES 3,(IX+0%02Xh)", nil},
			{c.ld_B_RES_4_off_IX_d, OP_BYTE, "LD B,RES 4,(IX+0%02Xh)", nil},
			{c.ld_C_RES_4_off_IX_d, OP_BYTE, "LD C,RES 4,(IX+0%02Xh)", nil},
			{c.ld_D_RES_4_off_IX_d, OP_BYTE, "LD D,RES 4,(IX+0%02Xh)", nil},
			{c.ld_E_RES_4_off_IX_d, OP_BYTE, "LD E,RES 4,(IX+0%02Xh)", nil},
			{c.ld_H_RES_4_off_IX_d, OP_BYTE, "LD H,RES 4,(IX+0%02Xh)", nil},
			{c.ld_L_RES_4_off_IX_d, OP_BYTE, "LD L,RES 4,(IX+0%02Xh)", nil},
			{c.res_4_off_IX_d, OP_BYTE, "RES 4,(IX+0%02Xh)", nil},
			{c.ld_A_RES_4_off_IX_d, OP_BYTE, "LD A,RES 4,(IX+0%02Xh)", nil},
			{c.ld_B_RES_5_off_IX_d, OP_BYTE, "LD B,RES 5,(IX+0%02Xh)", nil},
			{c.ld_C_RES_5_off_IX_d, OP_BYTE, "LD C,RES 5,(IX+0%02Xh)", nil},
			{c.ld_D_RES_5_off_IX_d, OP_BYTE, "LD D,RES 5,(IX+0%02Xh)", nil},
			{c.ld_E_RES_5_off_IX_d, OP_BYTE, "LD E,RES 5,(IX+0%02Xh)", nil},
			{c.ld_H_RES_5_off_IX_d, OP_BYTE, "LD H,RES 5,(IX+0%02Xh)", nil},
			{c.ld_L_RES_5_off_IX_d, OP_BYTE, "LD L,RES 5,(IX+0%02Xh)", nil},
			{c.res_5_off_IX_d, OP_BYTE, "RES 5,(IX+0%02Xh)", nil},
			{c.ld_A_RES_5_off_IX_d, OP_BYTE, "LD A,RES 5,(IX+0%02Xh)", nil},
			{c.ld_B_RES_6_off_IX_d, OP_BYTE, "LD B,RES 6,(IX+0%02Xh)", nil},
			{c.ld_C_RES_6_off_IX_d, OP_BYTE, "LD C,RES 6,(IX+0%02Xh)", nil},
			{c.ld_D_RES_6_off_IX_d, OP_BYTE, "LD D,RES 6,(IX+0%02Xh)", nil},
			{c.ld_E_RES_6_off_IX_d, OP_BYTE, "LD E,RES 6,(IX+0%02Xh)", nil},
			{c.ld_H_RES_6_off_IX_d, OP_BYTE, "LD H,RES 6,(IX+0%02Xh)", nil},
			{c.ld_L_RES_6_off_IX_d, OP_BYTE, "LD L,RES 6,(IX+0%02Xh)", nil},
			{c.res_6_off_IX_d, OP_BYTE, "RES 6,(IX+0%02Xh)", nil},
			{c.ld_A_RES_6_off_IX_d, OP_BYTE, "LD A,RES 6,(IX+0%02Xh)", nil},
			{c.ld_B_RES_7_off_IX_d, OP_BYTE, "LD B,RES 7,(IX+0%02Xh)", nil},
			{c.ld_C_RES_7_off_IX_d, OP_BYTE, "LD C,RES 7,(IX+0%02Xh)", nil},
			{c.ld_D_RES_7_off_IX_d, OP_BYTE, "LD D,RES 7,(IX+0%02Xh)", nil},
			{c.ld_E_RES_7_off_IX_d, OP_BYTE, "LD E,RES 7,(IX+0%02Xh)", nil},
			{c.ld_H_RES_7_off_IX_d, OP_BYTE, "LD H,RES 7,(IX+0%02Xh)", nil},
			{c.ld_L_RES_7_off_IX_d, OP_BYTE, "LD L,RES 7,(IX+0%02Xh)", nil},
			{c.res_7_off_IX_d, OP_BYTE, "RES 7,(IX+0%02Xh)", nil},
			{c.ld_A_RES_7_off_IX_d, OP_BYTE, "LD A,RES 7,(IX+0%02Xh)", nil},
			{c.ld_B_SET_0_off_IX_d, OP_BYTE, "LD B,SET 0,(IX+0%02Xh)", nil},
			{c.ld_C_SET_0_off_IX_d, OP_BYTE, "LD C,SET 0,(IX+0%02Xh)", nil},
			{c.ld_D_SET_0_off_IX_d, OP_BYTE, "LD D,SET 0,(IX+0%02Xh)", nil},
			{c.ld_E_SET_0_off_IX_d, OP_BYTE, "LD E,SET 0,(IX+0%02Xh)", nil},
			{c.ld_H_SET_0_off_IX_d, OP_BYTE, "LD H,SET 0,(IX+0%02Xh)", nil},
			{c.ld_L_SET_0_off_IX_d, OP_BYTE, "LD L,SET 0,(IX+0%02Xh)", nil},
			{c.set_0_off_IX_d, OP_BYTE, "SET 0,(IX+0%02Xh)", nil},
			{c.ld_A_SET_0_off_IX_d, OP_BYTE, "LD A,SET 0,(IX+0%02Xh)", nil},
			{c.ld_B_SET_1_off_IX_d, OP_BYTE, "LD B,SET 1,(IX+0%02Xh)", nil},
			{c.ld_C_SET_1_off_IX_d, OP_BYTE, "LD C,SET 1,(IX+0%02Xh)", nil},
			{c.ld_D_SET_1_off_IX_d, OP_BYTE, "LD D,SET 1,(IX+0%02Xh)", nil},
			{c.ld_E_SET_1_off_IX_d, OP_BYTE, "LD E,SET 1,(IX+0%02Xh)", nil},
			{c.ld_H_SET_1_off_IX_d, OP_BYTE, "LD H,SET 1,(IX+0%02Xh)", nil},
			{c.ld_L_SET_1_off_IX_d, OP_BYTE, "LD L,SET 1,(IX+0%02Xh)", nil},
			{c.set_1_off_IX_d, OP_BYTE, "SET 1,(IX+0%02Xh)", nil},
			{c.ld_A_SET_1_off_IX_d, OP_BYTE, "LD A,SET 1,(IX+0%02Xh)", nil},
			{c.ld_B_SET_2_off_IX_d, OP_BYTE, "LD B,SET 2,(IX+0%02Xh)", nil},
			{c.ld_C_SET_2_off_IX_d, OP_BYTE, "LD C,SET 2,(IX+0%02Xh)", nil},
			{c.ld_D_SET_2_off_IX_d, OP_BYTE, "LD D,SET 2,(IX+0%02Xh)", nil},
			{c.ld_E_SET_2_off_IX_d, OP_BYTE, "LD E,SET 2,(IX+0%02Xh)", nil},
			{c.ld_H_SET_2_off_IX_d, OP_BYTE, "LD H,SET 2,(IX+0%02Xh)", nil},
			{c.ld_L_SET_2_off_IX_d, OP_BYTE, "LD L,SET 2,(IX+0%02Xh)", nil},
			{c.set_2_off_IX_d, OP_BYTE, "SET 2,(IX+0%02Xh)", nil},
			{c.ld_A_SET_2_off_IX_d, OP_BYTE, "LD A,SET 2,(IX+0%02Xh)", nil},
			{c.ld_B_SET_3_off_IX_d, OP_BYTE, "LD B,SET 3,(IX+0%02Xh)", nil},
			{c.ld_C_SET_3_off_IX_d, OP_BYTE, "LD C,SET 3,(IX+0%02Xh)", nil},
			{c.ld_D_SET_3_off_IX_d, OP_BYTE, "LD D,SET 3,(IX+0%02Xh)", nil},
			{c.ld_E_SET_3_off_IX_d, OP_BYTE, "LD E,SET 3,(IX+0%02Xh)", nil},
			{c.ld_H_SET_3_off_IX_d, OP_BYTE, "LD H,SET 3,(IX+0%02Xh)", nil},
			{c.ld_L_SET_3_off_IX_d, OP_BYTE, "LD L,SET 3,(IX+0%02Xh)", nil},
			{c.set_3_off_IX_d, OP_BYTE, "SET 3,(IX+0%02Xh)", nil},
			{c.ld_A_SET_3_off_IX_d, OP_BYTE, "LD A,SET 3,(IX+0%02Xh)", nil},
			{c.ld_B_SET_4_off_IX_d, OP_BYTE, "LD B,SET 4,(IX+0%02Xh)", nil},
			{c.ld_C_SET_4_off_IX_d, OP_BYTE, "LD C,SET 4,(IX+0%02Xh)", nil},
			{c.ld_D_SET_4_off_IX_d, OP_BYTE, "LD D,SET 4,(IX+0%02Xh)", nil},
			{c.ld_E_SET_4_off_IX_d, OP_BYTE, "LD E,SET 4,(IX+0%02Xh)", nil},
			{c.ld_H_SET_4_off_IX_d, OP_BYTE, "LD H,SET 4,(IX+0%02Xh)", nil},
			{c.ld_L_SET_4_off_IX_d, OP_BYTE, "LD L,SET 4,(IX+0%02Xh)", nil},
			{c.set_4_off_IX_d, OP_BYTE, "SET 4,(IX+0%02Xh)", nil},
			{c.ld_A_SET_4_off_IX_d, OP_BYTE, "LD A,SET 4,(IX+0%02Xh)", nil},
			{c.ld_B_SET_5_off_IX_d, OP_BYTE, "LD B,SET 5,(IX+0%02Xh)", nil},
			{c.ld_C_SET_5_off_IX_d, OP_BYTE, "LD C,SET 5,(IX+0%02Xh)", nil},
			{c.ld_D_SET_5_off_IX_d, OP_BYTE, "LD D,SET 5,(IX+0%02Xh)", nil},
			{c.ld_E_SET_5_off_IX_d, OP_BYTE, "LD E,SET 5,(IX+0%02Xh)", nil},
			{c.ld_H_SET_5_off_IX_d, OP_BYTE, "LD H,SET 5,(IX+0%02Xh)", nil},
			{c.ld_L_SET_5_off_IX_d, OP_BYTE, "LD L,SET 5,(IX+0%02Xh)", nil},
			{c.set_5_off_IX_d, OP_BYTE, "SET 5,(IX+0%02Xh)", nil},
			{c.ld_A_SET_5_off_IX_d, OP_BYTE, "LD A,SET 5,(IX+0%02Xh)", nil},
			{c.ld_B_SET_6_off_IX_d, OP_BYTE, "LD B,SET 6,(IX+0%02Xh)", nil},
			{c.ld_C_SET_6_off_IX_d, OP_BYTE, "LD C,SET 6,(IX+0%02Xh)", nil},
			{c.ld_D_SET_6_off_IX_d, OP_BYTE, "LD D,SET 6,(IX+0%02Xh)", nil},
			{c.ld_E_SET_6_off_IX_d, OP_BYTE, "LD E,SET 6,(IX+0%02Xh)", nil},
			{c.ld_H_SET_6_off_IX_d, OP_BYTE, "LD H,SET 6,(IX+0%02Xh)", nil},
			{c.ld_L_SET_6_off_IX_d, OP_BYTE, "LD L,SET 6,(IX+0%02Xh)", nil},
			{c.set_6_off_IX_d, OP_BYTE, "SET 6,(IX+0%02Xh)", nil},
			{c.ld_A_SET_6_off_IX_d, OP_BYTE, "LD A,SET 6,(IX+0%02Xh)", nil},
			{c.ld_B_SET_7_off_IX_d, OP_BYTE, "LD B,SET 7,(IX+0%02Xh)", nil},
			{c.ld_C_SET_7_off_IX_d, OP_BYTE, "LD C,SET 7,(IX+0%02Xh)", nil},
			{c.ld_D_SET_7_off_IX_d, OP_BYTE, "LD D,SET 7,(IX+0%02Xh)", nil},
			{c.ld_E_SET_7_off_IX_d, OP_BYTE, "LD E,SET 7,(IX+0%02Xh)", nil},
			{c.ld_H_SET_7_off_IX_d, OP_BYTE, "LD H,SET 7,(IX+0%02Xh)", nil},
			{c.ld_L_SET_7_off_IX_d, OP_BYTE, "LD L,SET 7,(IX+0%02Xh)", nil},
			{c.set_7_off_IX_d, OP_BYTE, "SET 7,(IX+0%02Xh)", nil},
			{c.ld_A_SET_7_off_IX_d, OP_BYTE, "LD A,SET 7,(IX+0%02Xh)", nil}}}

	c.opcodes_ED = Z80OpcodeTable{
		0,
		[256]Z80OpcodeEntry{
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.in_B_off_C, OP_NONE, "IN B,(C)", nil},
			{c.out_off_C_B, OP_NONE, "OUT (C),B", nil},
			{c.sbc_HL_BC, OP_NONE, "SBC HL,BC", nil},
			{c.ld_off_nn_BC, OP_WORD, "LD (0%04Xh),BC", nil},
			{c.neg, OP_NONE, "NEG", nil},
			{c.retn, OP_NONE, "RETN", nil},
			{c.im_0, OP_NONE, "IM 0", nil},
			{c.ld_I_A, OP_NONE, "LD I,A", nil},
			{c.in_C_off_C, OP_NONE, "IN C,(C)", nil},
			{c.out_off_C_C, OP_NONE, "OUT (C),C", nil},
			{c.adc_HL_BC, OP_NONE, "ADC HL,BC", nil},
			{c.ld_BC_off_nn, OP_WORD, "LD BC,(0%04Xh)", nil},
			{c.neg, OP_NONE, "NEG", nil},
			{c.reti, OP_NONE, "RETI", nil},
			{c.im_0, OP_NONE, "IM 0", nil},
			{c.ld_R_A, OP_NONE, "LD R,A", nil},
			{c.in_D_off_C, OP_NONE, "IN D,(C)", nil},
			{c.out_off_C_D, OP_NONE, "OUT (C),D", nil},
			{c.sbc_HL_DE, OP_NONE, "SBC HL,DE", nil},
			{c.ld_off_nn_DE, OP_WORD, "LD (0%04Xh),DE", nil},
			{c.neg, OP_NONE, "NEG", nil},
			{c.retn, OP_NONE, "RETN", nil},
			{c.im_1, OP_NONE, "IM 1", nil},
			{c.ld_A_I, OP_NONE, "LD A,I", nil},
			{c.in_E_off_C, OP_NONE, "IN E,(C)", nil},
			{c.out_off_C_E, OP_NONE, "OUT (C),E", nil},
			{c.adc_HL_DE, OP_NONE, "ADC HL,DE", nil},
			{c.ld_DE_off_nn, OP_WORD, "LD DE,(0%04Xh)", nil},
			{c.neg, OP_NONE, "NEG", nil},
			{c.retn, OP_NONE, "RETN", nil},
			{c.im_2, OP_NONE, "IM 2", nil},
			{c.ld_A_R, OP_NONE, "LD A,R", nil},
			{c.in_H_off_C, OP_NONE, "IN H,(C)", nil},
			{c.out_off_C_H, OP_NONE, "OUT (C),H", nil},
			{c.sbc_HL_HL, OP_NONE, "SBC HL,HL", nil},
			{c.ld_off_nn_HL, OP_WORD, "LD (0%04Xh),HL", nil},
			{c.neg, OP_NONE, "NEG", nil},
			{c.retn, OP_NONE, "RETN", nil},
			{c.im_0, OP_NONE, "IM 0", nil},
			{c.rrd, OP_NONE, "RRD", nil},
			{c.in_L_off_C, OP_NONE, "IN L,(C)", nil},
			{c.out_off_C_L, OP_NONE, "OUT (C),L", nil},
			{c.adc_HL_HL, OP_NONE, "ADC HL,HL", nil},
			{c.ld_HL_off_nn, OP_WORD, "LD HL,(0%04Xh)", nil},
			{c.neg, OP_NONE, "NEG", nil},
			{c.retn, OP_NONE, "RETN", nil},
			{c.im_0, OP_NONE, "IM 0", nil},
			{c.rld, OP_NONE, "RLD", nil},
			{c.in_F_off_C, OP_NONE, "IN F,(C)", nil},
			{c.out_off_C_0, OP_NONE, "OUT (C),0", nil},
			{c.sbc_HL_SP, OP_NONE, "SBC HL,SP", nil},
			{c.ld_off_nn_SP, OP_WORD, "LD (0%04Xh),SP", nil},
			{c.neg, OP_NONE, "NEG", nil},
			{c.retn, OP_NONE, "RETN", nil},
			{c.im_1, OP_NONE, "IM 1", nil},
			{nil, OP_NONE, "", nil},
			{c.in_A_off_C, OP_NONE, "IN A,(C)", nil},
			{c.out_off_C_A, OP_NONE, "OUT (C),A", nil},
			{c.adc_HL_SP, OP_NONE, "ADC HL,SP", nil},
			{c.ld_SP_off_nn, OP_WORD, "LD SP,(0%04Xh)", nil},
			{c.neg, OP_NONE, "NEG", nil},
			{c.retn, OP_NONE, "RETN", nil},
			{c.im_2, OP_NONE, "IM 2", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ldi, OP_NONE, "LDI", nil},
			{c.cpi, OP_NONE, "c.cpi", nil},
			{c.ini, OP_NONE, "INI", nil},
			{c.outi, OP_NONE, "OUTI", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ldd, OP_NONE, "LDD", nil},
			{c.cpd, OP_NONE, "c.cpd", nil},
			{c.ind, OP_NONE, "IND", nil},
			{c.outd, OP_NONE, "OUTD", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ldir, OP_NONE, "LDIR", nil},
			{c.cpir, OP_NONE, "c.cpiR", nil},
			{c.inir, OP_NONE, "INIR", nil},
			{c.otir, OP_NONE, "c.otir", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.lddr, OP_NONE, "LDDR", nil},
			{c.cpdr, OP_NONE, "c.cpdR", nil},
			{c.indr, OP_NONE, "INDR", nil},
			{c.otdr, OP_NONE, "OTDR", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil}}}
	c.opcodes_FD = Z80OpcodeTable{
		0,
		[256]Z80OpcodeEntry{
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.add_IY_BC, OP_NONE, "ADD IY,BC", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.add_IY_DE, OP_NONE, "ADD IY,DE", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_IY_nn, OP_WORD, "LD IY,0%04Xh", nil},
			{c.ld_off_nn_IY, OP_WORD, "LD (0%04Xh),IY", nil},
			{c.inc_IY, OP_NONE, "INC IY", nil},
			{c.inc_IYh, OP_NONE, "INC IYh", nil},
			{c.dec_IYh, OP_NONE, "DEC IYh", nil},
			{c.ld_IYh_n, OP_BYTE, "LD IYh,0%02Xh", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.add_IY_IY, OP_NONE, "ADD IY,IY", nil},
			{c.ld_IY_off_nn, OP_WORD, "LD IY,(0%04Xh)", nil},
			{c.dec_IY, OP_NONE, "DEC IY", nil},
			{c.inc_IYl, OP_NONE, "INC IYl", nil},
			{c.dec_IYl, OP_NONE, "DEC IYl", nil},
			{c.ld_IYl_n, OP_BYTE, "LD IYl,0%02Xh", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.inc_off_IY_d, OP_BYTE, "INC (IY+0%02Xh)", nil},
			{c.dec_off_IY_d, OP_BYTE, "DEC (IY+0%02Xh)", nil},
			{c.ld_off_IY_d_n, OP_BYTE, "LD (IY+0%02Xh),0%02Xh", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.add_IY_SP, OP_NONE, "ADD IY,SP", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_B_IYh, OP_NONE, "LD B,IYh", nil},
			{c.ld_B_IYl, OP_NONE, "LD B,IYl", nil},
			{c.ld_B_off_IY_d, OP_BYTE, "LD B,(IY+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_C_IYh, OP_NONE, "LD C,IYh", nil},
			{c.ld_C_IYl, OP_NONE, "LD C,IYl", nil},
			{c.ld_C_off_IY_d, OP_BYTE, "LD C,(IY+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_D_IYh, OP_NONE, "LD D,IYh", nil},
			{c.ld_D_IYl, OP_NONE, "LD D,IYl", nil},
			{c.ld_D_off_IY_d, OP_BYTE, "LD D,(IY+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_E_IYh, OP_NONE, "LD E,IYh", nil},
			{c.ld_E_IYl, OP_NONE, "LD E,IYl", nil},
			{c.ld_E_off_IY_d, OP_BYTE, "LD E,(IY+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_IYh_B, OP_NONE, "LD IYh,B", nil},
			{c.ld_IYh_C, OP_NONE, "LD IYh,C", nil},
			{c.ld_IYh_D, OP_NONE, "LD IYh,D", nil},
			{c.ld_IYh_E, OP_NONE, "LD IYh,E", nil},
			{c.ld_IYh_IYh, OP_NONE, "LD IYh,IYh", nil},
			{c.ld_IYh_IYl, OP_NONE, "LD IYh,IYl", nil},
			{c.ld_H_off_IY_d, OP_BYTE, "LD H,(IY+0%02Xh)", nil},
			{c.ld_IYh_A, OP_NONE, "LD IYh,A", nil},
			{c.ld_IYl_B, OP_NONE, "LD IYl,B", nil},
			{c.ld_IYl_C, OP_NONE, "LD IYl,C", nil},
			{c.ld_IYl_D, OP_NONE, "LD IYl,D", nil},
			{c.ld_IYl_E, OP_NONE, "LD IYl,E", nil},
			{c.ld_IYl_IYh, OP_NONE, "LD IYl,IYh", nil},
			{c.ld_IYl_IYl, OP_NONE, "LD IYl,IYl", nil},
			{c.ld_L_off_IY_d, OP_BYTE, "LD L,(IY+0%02Xh)", nil},
			{c.ld_IYl_A, OP_NONE, "LD IYl,A", nil},
			{c.ld_off_IY_d_B, OP_BYTE, "LD (IY+0%02Xh),B", nil},
			{c.ld_off_IY_d_C, OP_BYTE, "LD (IY+0%02Xh),C", nil},
			{c.ld_off_IY_d_D, OP_BYTE, "LD (IY+0%02Xh),D", nil},
			{c.ld_off_IY_d_E, OP_BYTE, "LD (IY+0%02Xh),E", nil},
			{c.ld_off_IY_d_H, OP_BYTE, "LD (IY+0%02Xh),H", nil},
			{c.ld_off_IY_d_L, OP_BYTE, "LD (IY+0%02Xh),L", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_off_IY_d_A, OP_BYTE, "LD (IY+0%02Xh),A", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_A_IYh, OP_NONE, "LD A,IYh", nil},
			{c.ld_A_IYl, OP_NONE, "LD A,IYl", nil},
			{c.ld_A_off_IY_d, OP_BYTE, "LD A,(IY+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.add_A_IYh, OP_NONE, "ADD A,IYh", nil},
			{c.add_A_IYl, OP_NONE, "ADD A,IYl", nil},
			{c.add_A_off_IY_d, OP_BYTE, "ADD A,(IY+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.adc_A_IYh, OP_NONE, "ADC A,IYh", nil},
			{c.adc_A_IYl, OP_NONE, "ADC A,IYl", nil},
			{c.adc_A_off_IY_d, OP_BYTE, "ADC A,(IY+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.sub_A_IYh, OP_NONE, "SUB A,IYh", nil},
			{c.sub_A_IYl, OP_NONE, "SUB A,IYl", nil},
			{c.sub_A_off_IY_d, OP_BYTE, "SUB A,(IY+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.sbc_A_IYh, OP_NONE, "SBC A,IYh", nil},
			{c.sbc_A_IYl, OP_NONE, "SBC A,IYl", nil},
			{c.sbc_A_off_IY_d, OP_BYTE, "SBC A,(IY+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.and_IYh, OP_NONE, "AND IYh", nil},
			{c.and_IYl, OP_NONE, "AND IYl", nil},
			{c.and_off_IY_d, OP_BYTE, "AND (IY+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.xor_IYh, OP_NONE, "XOR IYh", nil},
			{c.xor_IYl, OP_NONE, "XOR IYl", nil},
			{c.xor_off_IY_d, OP_BYTE, "XOR (IY+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.or_IYh, OP_NONE, "OR IYh", nil},
			{c.or_IYl, OP_NONE, "OR IYl", nil},
			{c.or_off_IY_d, OP_BYTE, "OR (IY+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.cp_IYh, OP_NONE, "CP IYh", nil},
			{c.cp_IYl, OP_NONE, "CP IYl", nil},
			{c.cp_off_IY_d, OP_BYTE, "CP (IY+0%02Xh)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", &c.opcodes_FDCB},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.pop_IY, OP_NONE, "POP IY", nil},
			{nil, OP_NONE, "", nil},
			{c.ex_off_SP_IY, OP_NONE, "EX (SP),IY", nil},
			{nil, OP_NONE, "", nil},
			{c.push_IY, OP_NONE, "PUSH IY", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.jp_off_IY, OP_NONE, "JP (IY)", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{c.ld_SP_IY, OP_NONE, "LD SP,IY", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil},
			{nil, OP_NONE, "", nil}}}
	c.opcodes_FDCB = Z80OpcodeTable{
		1,
		[256]Z80OpcodeEntry{
			{c.ld_B_RLC_off_IY_d, OP_BYTE, "LD B,RLC (IY+0%02Xh)", nil},
			{c.ld_C_RLC_off_IY_d, OP_BYTE, "LD C,RLC (IY+0%02Xh)", nil},
			{c.ld_D_RLC_off_IY_d, OP_BYTE, "LD D,RLC (IY+0%02Xh)", nil},
			{c.ld_E_RLC_off_IY_d, OP_BYTE, "LD E,RLC (IY+0%02Xh)", nil},
			{c.ld_H_RLC_off_IY_d, OP_BYTE, "LD H,RLC (IY+0%02Xh)", nil},
			{c.ld_L_RLC_off_IY_d, OP_BYTE, "LD L,RLC (IY+0%02Xh)", nil},
			{c.rlc_off_IY_d, OP_BYTE, "RLC (IY+0%02Xh)", nil},
			{c.ld_A_RLC_off_IY_d, OP_BYTE, "LD A,RLC (IY+0%02Xh)", nil},
			{c.ld_B_RRC_off_IY_d, OP_BYTE, "LD B,RRC (IY+0%02Xh)", nil},
			{c.ld_C_RRC_off_IY_d, OP_BYTE, "LD C,RRC (IY+0%02Xh)", nil},
			{c.ld_D_RRC_off_IY_d, OP_BYTE, "LD D,RRC (IY+0%02Xh)", nil},
			{c.ld_E_RRC_off_IY_d, OP_BYTE, "LD E,RRC (IY+0%02Xh)", nil},
			{c.ld_H_RRC_off_IY_d, OP_BYTE, "LD H,RRC (IY+0%02Xh)", nil},
			{c.ld_L_RRC_off_IY_d, OP_BYTE, "LD L,RRC (IY+0%02Xh)", nil},
			{c.rrc_off_IY_d, OP_BYTE, "RRC (IY+0%02Xh)", nil},
			{c.ld_A_RRC_off_IY_d, OP_BYTE, "LD A,RRC (IY+0%02Xh)", nil},
			{c.ld_B_RL_off_IY_d, OP_BYTE, "LD B,RL (IY+0%02Xh)", nil},
			{c.ld_C_RL_off_IY_d, OP_BYTE, "LD C,RL (IY+0%02Xh)", nil},
			{c.ld_D_RL_off_IY_d, OP_BYTE, "LD D,RL (IY+0%02Xh)", nil},
			{c.ld_E_RL_off_IY_d, OP_BYTE, "LD E,RL (IY+0%02Xh)", nil},
			{c.ld_H_RL_off_IY_d, OP_BYTE, "LD H,RL (IY+0%02Xh)", nil},
			{c.ld_L_RL_off_IY_d, OP_BYTE, "LD L,RL (IY+0%02Xh)", nil},
			{c.rl_off_IY_d, OP_BYTE, "RL (IY+0%02Xh)", nil},
			{c.ld_A_RL_off_IY_d, OP_BYTE, "LD A,RL (IY+0%02Xh)", nil},
			{c.ld_B_RR_off_IY_d, OP_BYTE, "LD B,RR (IY+0%02Xh)", nil},
			{c.ld_C_RR_off_IY_d, OP_BYTE, "LD C,RR (IY+0%02Xh)", nil},
			{c.ld_D_RR_off_IY_d, OP_BYTE, "LD D,RR (IY+0%02Xh)", nil},
			{c.ld_E_RR_off_IY_d, OP_BYTE, "LD E,RR (IY+0%02Xh)", nil},
			{c.ld_H_RR_off_IY_d, OP_BYTE, "LD H,RR (IY+0%02Xh)", nil},
			{c.ld_L_RR_off_IY_d, OP_BYTE, "LD L,RR (IY+0%02Xh)", nil},
			{c.rr_off_IY_d, OP_BYTE, "RR (IY+0%02Xh)", nil},
			{c.ld_A_RR_off_IY_d, OP_BYTE, "LD A,RR (IY+0%02Xh)", nil},
			{c.ld_B_SLA_off_IY_d, OP_BYTE, "LD B,SLA (IY+0%02Xh)", nil},
			{c.ld_C_SLA_off_IY_d, OP_BYTE, "LD C,SLA (IY+0%02Xh)", nil},
			{c.ld_D_SLA_off_IY_d, OP_BYTE, "LD D,SLA (IY+0%02Xh)", nil},
			{c.ld_E_SLA_off_IY_d, OP_BYTE, "LD E,SLA (IY+0%02Xh)", nil},
			{c.ld_H_SLA_off_IY_d, OP_BYTE, "LD H,SLA (IY+0%02Xh)", nil},
			{c.ld_L_SLA_off_IY_d, OP_BYTE, "LD L,SLA (IY+0%02Xh)", nil},
			{c.sla_off_IY_d, OP_BYTE, "SLA (IY+0%02Xh)", nil},
			{c.ld_A_SLA_off_IY_d, OP_BYTE, "LD A,SLA (IY+0%02Xh)", nil},
			{c.ld_B_SRA_off_IY_d, OP_BYTE, "LD B,SRA (IY+0%02Xh)", nil},
			{c.ld_C_SRA_off_IY_d, OP_BYTE, "LD C,SRA (IY+0%02Xh)", nil},
			{c.ld_D_SRA_off_IY_d, OP_BYTE, "LD D,SRA (IY+0%02Xh)", nil},
			{c.ld_E_SRA_off_IY_d, OP_BYTE, "LD E,SRA (IY+0%02Xh)", nil},
			{c.ld_H_SRA_off_IY_d, OP_BYTE, "LD H,SRA (IY+0%02Xh)", nil},
			{c.ld_L_SRA_off_IY_d, OP_BYTE, "LD L,SRA (IY+0%02Xh)", nil},
			{c.sra_off_IY_d, OP_BYTE, "SRA (IY+0%02Xh)", nil},
			{c.ld_A_SRA_off_IY_d, OP_BYTE, "LD A,SRA (IY+0%02Xh)", nil},
			{c.ld_B_SLL_off_IY_d, OP_BYTE, "LD B,SLL (IY+0%02Xh)", nil},
			{c.ld_C_SLL_off_IY_d, OP_BYTE, "LD C,SLL (IY+0%02Xh)", nil},
			{c.ld_D_SLL_off_IY_d, OP_BYTE, "LD D,SLL (IY+0%02Xh)", nil},
			{c.ld_E_SLL_off_IY_d, OP_BYTE, "LD E,SLL (IY+0%02Xh)", nil},
			{c.ld_H_SLL_off_IY_d, OP_BYTE, "LD H,SLL (IY+0%02Xh)", nil},
			{c.ld_L_SLL_off_IY_d, OP_BYTE, "LD L,SLL (IY+0%02Xh)", nil},
			{c.sll_off_IY_d, OP_BYTE, "SLL (IY+0%02Xh)", nil},
			{c.ld_A_SLL_off_IY_d, OP_BYTE, "LD A,SLL (IY+0%02Xh)", nil},
			{c.ld_B_SRL_off_IY_d, OP_BYTE, "LD B,SRL (IY+0%02Xh)", nil},
			{c.ld_C_SRL_off_IY_d, OP_BYTE, "LD C,SRL (IY+0%02Xh)", nil},
			{c.ld_D_SRL_off_IY_d, OP_BYTE, "LD D,SRL (IY+0%02Xh)", nil},
			{c.ld_E_SRL_off_IY_d, OP_BYTE, "LD E,SRL (IY+0%02Xh)", nil},
			{c.ld_H_SRL_off_IY_d, OP_BYTE, "LD H,SRL (IY+0%02Xh)", nil},
			{c.ld_L_SRL_off_IY_d, OP_BYTE, "LD L,SRL (IY+0%02Xh)", nil},
			{c.srl_off_IY_d, OP_BYTE, "SRL (IY+0%02Xh)", nil},
			{c.ld_A_SRL_off_IY_d, OP_BYTE, "LD A,SRL (IY+0%02Xh)", nil},
			{c.bit_0_off_IY_d, OP_BYTE, "BIT 0,(IY+0%02Xh)", nil},
			{c.bit_0_off_IY_d, OP_BYTE, "BIT 0,(IY+0%02Xh)", nil},
			{c.bit_0_off_IY_d, OP_BYTE, "BIT 0,(IY+0%02Xh)", nil},
			{c.bit_0_off_IY_d, OP_BYTE, "BIT 0,(IY+0%02Xh)", nil},
			{c.bit_0_off_IY_d, OP_BYTE, "BIT 0,(IY+0%02Xh)", nil},
			{c.bit_0_off_IY_d, OP_BYTE, "BIT 0,(IY+0%02Xh)", nil},
			{c.bit_0_off_IY_d, OP_BYTE, "BIT 0,(IY+0%02Xh)", nil},
			{c.bit_0_off_IY_d, OP_BYTE, "BIT 0,(IY+0%02Xh)", nil},
			{c.bit_1_off_IY_d, OP_BYTE, "BIT 1,(IY+0%02Xh)", nil},
			{c.bit_1_off_IY_d, OP_BYTE, "BIT 1,(IY+0%02Xh)", nil},
			{c.bit_1_off_IY_d, OP_BYTE, "BIT 1,(IY+0%02Xh)", nil},
			{c.bit_1_off_IY_d, OP_BYTE, "BIT 1,(IY+0%02Xh)", nil},
			{c.bit_1_off_IY_d, OP_BYTE, "BIT 1,(IY+0%02Xh)", nil},
			{c.bit_1_off_IY_d, OP_BYTE, "BIT 1,(IY+0%02Xh)", nil},
			{c.bit_1_off_IY_d, OP_BYTE, "BIT 1,(IY+0%02Xh)", nil},
			{c.bit_1_off_IY_d, OP_BYTE, "BIT 1,(IY+0%02Xh)", nil},
			{c.bit_2_off_IY_d, OP_BYTE, "BIT 2,(IY+0%02Xh)", nil},
			{c.bit_2_off_IY_d, OP_BYTE, "BIT 2,(IY+0%02Xh)", nil},
			{c.bit_2_off_IY_d, OP_BYTE, "BIT 2,(IY+0%02Xh)", nil},
			{c.bit_2_off_IY_d, OP_BYTE, "BIT 2,(IY+0%02Xh)", nil},
			{c.bit_2_off_IY_d, OP_BYTE, "BIT 2,(IY+0%02Xh)", nil},
			{c.bit_2_off_IY_d, OP_BYTE, "BIT 2,(IY+0%02Xh)", nil},
			{c.bit_2_off_IY_d, OP_BYTE, "BIT 2,(IY+0%02Xh)", nil},
			{c.bit_2_off_IY_d, OP_BYTE, "BIT 2,(IY+0%02Xh)", nil},
			{c.bit_3_off_IY_d, OP_BYTE, "BIT 3,(IY+0%02Xh)", nil},
			{c.bit_3_off_IY_d, OP_BYTE, "BIT 3,(IY+0%02Xh)", nil},
			{c.bit_3_off_IY_d, OP_BYTE, "BIT 3,(IY+0%02Xh)", nil},
			{c.bit_3_off_IY_d, OP_BYTE, "BIT 3,(IY+0%02Xh)", nil},
			{c.bit_3_off_IY_d, OP_BYTE, "BIT 3,(IY+0%02Xh)", nil},
			{c.bit_3_off_IY_d, OP_BYTE, "BIT 3,(IY+0%02Xh)", nil},
			{c.bit_3_off_IY_d, OP_BYTE, "BIT 3,(IY+0%02Xh)", nil},
			{c.bit_3_off_IY_d, OP_BYTE, "BIT 3,(IY+0%02Xh)", nil},
			{c.bit_4_off_IY_d, OP_BYTE, "BIT 4,(IY+0%02Xh)", nil},
			{c.bit_4_off_IY_d, OP_BYTE, "BIT 4,(IY+0%02Xh)", nil},
			{c.bit_4_off_IY_d, OP_BYTE, "BIT 4,(IY+0%02Xh)", nil},
			{c.bit_4_off_IY_d, OP_BYTE, "BIT 4,(IY+0%02Xh)", nil},
			{c.bit_4_off_IY_d, OP_BYTE, "BIT 4,(IY+0%02Xh)", nil},
			{c.bit_4_off_IY_d, OP_BYTE, "BIT 4,(IY+0%02Xh)", nil},
			{c.bit_4_off_IY_d, OP_BYTE, "BIT 4,(IY+0%02Xh)", nil},
			{c.bit_4_off_IY_d, OP_BYTE, "BIT 4,(IY+0%02Xh)", nil},
			{c.bit_5_off_IY_d, OP_BYTE, "BIT 5,(IY+0%02Xh)", nil},
			{c.bit_5_off_IY_d, OP_BYTE, "BIT 5,(IY+0%02Xh)", nil},
			{c.bit_5_off_IY_d, OP_BYTE, "BIT 5,(IY+0%02Xh)", nil},
			{c.bit_5_off_IY_d, OP_BYTE, "BIT 5,(IY+0%02Xh)", nil},
			{c.bit_5_off_IY_d, OP_BYTE, "BIT 5,(IY+0%02Xh)", nil},
			{c.bit_5_off_IY_d, OP_BYTE, "BIT 5,(IY+0%02Xh)", nil},
			{c.bit_5_off_IY_d, OP_BYTE, "BIT 5,(IY+0%02Xh)", nil},
			{c.bit_5_off_IY_d, OP_BYTE, "BIT 5,(IY+0%02Xh)", nil},
			{c.bit_6_off_IY_d, OP_BYTE, "BIT 6,(IY+0%02Xh)", nil},
			{c.bit_6_off_IY_d, OP_BYTE, "BIT 6,(IY+0%02Xh)", nil},
			{c.bit_6_off_IY_d, OP_BYTE, "BIT 6,(IY+0%02Xh)", nil},
			{c.bit_6_off_IY_d, OP_BYTE, "BIT 6,(IY+0%02Xh)", nil},
			{c.bit_6_off_IY_d, OP_BYTE, "BIT 6,(IY+0%02Xh)", nil},
			{c.bit_6_off_IY_d, OP_BYTE, "BIT 6,(IY+0%02Xh)", nil},
			{c.bit_6_off_IY_d, OP_BYTE, "BIT 6,(IY+0%02Xh)", nil},
			{c.bit_6_off_IY_d, OP_BYTE, "BIT 6,(IY+0%02Xh)", nil},
			{c.bit_7_off_IY_d, OP_BYTE, "BIT 7,(IY+0%02Xh)", nil},
			{c.bit_7_off_IY_d, OP_BYTE, "BIT 7,(IY+0%02Xh)", nil},
			{c.bit_7_off_IY_d, OP_BYTE, "BIT 7,(IY+0%02Xh)", nil},
			{c.bit_7_off_IY_d, OP_BYTE, "BIT 7,(IY+0%02Xh)", nil},
			{c.bit_7_off_IY_d, OP_BYTE, "BIT 7,(IY+0%02Xh)", nil},
			{c.bit_7_off_IY_d, OP_BYTE, "BIT 7,(IY+0%02Xh)", nil},
			{c.bit_7_off_IY_d, OP_BYTE, "BIT 7,(IY+0%02Xh)", nil},
			{c.bit_7_off_IY_d, OP_BYTE, "BIT 7,(IY+0%02Xh)", nil},
			{c.ld_B_RES_0_off_IY_d, OP_BYTE, "LD B,RES 0,(IY+0%02Xh)", nil},
			{c.ld_C_RES_0_off_IY_d, OP_BYTE, "LD C,RES 0,(IY+0%02Xh)", nil},
			{c.ld_D_RES_0_off_IY_d, OP_BYTE, "LD D,RES 0,(IY+0%02Xh)", nil},
			{c.ld_E_RES_0_off_IY_d, OP_BYTE, "LD E,RES 0,(IY+0%02Xh)", nil},
			{c.ld_H_RES_0_off_IY_d, OP_BYTE, "LD H,RES 0,(IY+0%02Xh)", nil},
			{c.ld_L_RES_0_off_IY_d, OP_BYTE, "LD L,RES 0,(IY+0%02Xh)", nil},
			{c.res_0_off_IY_d, OP_BYTE, "RES 0,(IY+0%02Xh)", nil},
			{c.ld_A_RES_0_off_IY_d, OP_BYTE, "LD A,RES 0,(IY+0%02Xh)", nil},
			{c.ld_B_RES_1_off_IY_d, OP_BYTE, "LD B,RES 1,(IY+0%02Xh)", nil},
			{c.ld_C_RES_1_off_IY_d, OP_BYTE, "LD C,RES 1,(IY+0%02Xh)", nil},
			{c.ld_D_RES_1_off_IY_d, OP_BYTE, "LD D,RES 1,(IY+0%02Xh)", nil},
			{c.ld_E_RES_1_off_IY_d, OP_BYTE, "LD E,RES 1,(IY+0%02Xh)", nil},
			{c.ld_H_RES_1_off_IY_d, OP_BYTE, "LD H,RES 1,(IY+0%02Xh)", nil},
			{c.ld_L_RES_1_off_IY_d, OP_BYTE, "LD L,RES 1,(IY+0%02Xh)", nil},
			{c.res_1_off_IY_d, OP_BYTE, "RES 1,(IY+0%02Xh)", nil},
			{c.ld_A_RES_1_off_IY_d, OP_BYTE, "LD A,RES 1,(IY+0%02Xh)", nil},
			{c.ld_B_RES_2_off_IY_d, OP_BYTE, "LD B,RES 2,(IY+0%02Xh)", nil},
			{c.ld_C_RES_2_off_IY_d, OP_BYTE, "LD C,RES 2,(IY+0%02Xh)", nil},
			{c.ld_D_RES_2_off_IY_d, OP_BYTE, "LD D,RES 2,(IY+0%02Xh)", nil},
			{c.ld_E_RES_2_off_IY_d, OP_BYTE, "LD E,RES 2,(IY+0%02Xh)", nil},
			{c.ld_H_RES_2_off_IY_d, OP_BYTE, "LD H,RES 2,(IY+0%02Xh)", nil},
			{c.ld_L_RES_2_off_IY_d, OP_BYTE, "LD L,RES 2,(IY+0%02Xh)", nil},
			{c.res_2_off_IY_d, OP_BYTE, "RES 2,(IY+0%02Xh)", nil},
			{c.ld_A_RES_2_off_IY_d, OP_BYTE, "LD A,RES 2,(IY+0%02Xh)", nil},
			{c.ld_B_RES_3_off_IY_d, OP_BYTE, "LD B,RES 3,(IY+0%02Xh)", nil},
			{c.ld_C_RES_3_off_IY_d, OP_BYTE, "LD C,RES 3,(IY+0%02Xh)", nil},
			{c.ld_D_RES_3_off_IY_d, OP_BYTE, "LD D,RES 3,(IY+0%02Xh)", nil},
			{c.ld_E_RES_3_off_IY_d, OP_BYTE, "LD E,RES 3,(IY+0%02Xh)", nil},
			{c.ld_H_RES_3_off_IY_d, OP_BYTE, "LD H,RES 3,(IY+0%02Xh)", nil},
			{c.ld_L_RES_3_off_IY_d, OP_BYTE, "LD L,RES 3,(IY+0%02Xh)", nil},
			{c.res_3_off_IY_d, OP_BYTE, "RES 3,(IY+0%02Xh)", nil},
			{c.ld_A_RES_3_off_IY_d, OP_BYTE, "LD A,RES 3,(IY+0%02Xh)", nil},
			{c.ld_B_RES_4_off_IY_d, OP_BYTE, "LD B,RES 4,(IY+0%02Xh)", nil},
			{c.ld_C_RES_4_off_IY_d, OP_BYTE, "LD C,RES 4,(IY+0%02Xh)", nil},
			{c.ld_D_RES_4_off_IY_d, OP_BYTE, "LD D,RES 4,(IY+0%02Xh)", nil},
			{c.ld_E_RES_4_off_IY_d, OP_BYTE, "LD E,RES 4,(IY+0%02Xh)", nil},
			{c.ld_H_RES_4_off_IY_d, OP_BYTE, "LD H,RES 4,(IY+0%02Xh)", nil},
			{c.ld_L_RES_4_off_IY_d, OP_BYTE, "LD L,RES 4,(IY+0%02Xh)", nil},
			{c.res_4_off_IY_d, OP_BYTE, "RES 4,(IY+0%02Xh)", nil},
			{c.ld_A_RES_4_off_IY_d, OP_BYTE, "LD A,RES 4,(IY+0%02Xh)", nil},
			{c.ld_B_RES_5_off_IY_d, OP_BYTE, "LD B,RES 5,(IY+0%02Xh)", nil},
			{c.ld_C_RES_5_off_IY_d, OP_BYTE, "LD C,RES 5,(IY+0%02Xh)", nil},
			{c.ld_D_RES_5_off_IY_d, OP_BYTE, "LD D,RES 5,(IY+0%02Xh)", nil},
			{c.ld_E_RES_5_off_IY_d, OP_BYTE, "LD E,RES 5,(IY+0%02Xh)", nil},
			{c.ld_H_RES_5_off_IY_d, OP_BYTE, "LD H,RES 5,(IY+0%02Xh)", nil},
			{c.ld_L_RES_5_off_IY_d, OP_BYTE, "LD L,RES 5,(IY+0%02Xh)", nil},
			{c.res_5_off_IY_d, OP_BYTE, "RES 5,(IY+0%02Xh)", nil},
			{c.ld_A_RES_5_off_IY_d, OP_BYTE, "LD A,RES 5,(IY+0%02Xh)", nil},
			{c.ld_B_RES_6_off_IY_d, OP_BYTE, "LD B,RES 6,(IY+0%02Xh)", nil},
			{c.ld_C_RES_6_off_IY_d, OP_BYTE, "LD C,RES 6,(IY+0%02Xh)", nil},
			{c.ld_D_RES_6_off_IY_d, OP_BYTE, "LD D,RES 6,(IY+0%02Xh)", nil},
			{c.ld_E_RES_6_off_IY_d, OP_BYTE, "LD E,RES 6,(IY+0%02Xh)", nil},
			{c.ld_H_RES_6_off_IY_d, OP_BYTE, "LD H,RES 6,(IY+0%02Xh)", nil},
			{c.ld_L_RES_6_off_IY_d, OP_BYTE, "LD L,RES 6,(IY+0%02Xh)", nil},
			{c.res_6_off_IY_d, OP_BYTE, "RES 6,(IY+0%02Xh)", nil},
			{c.ld_A_RES_6_off_IY_d, OP_BYTE, "LD A,RES 6,(IY+0%02Xh)", nil},
			{c.ld_B_RES_7_off_IY_d, OP_BYTE, "LD B,RES 7,(IY+0%02Xh)", nil},
			{c.ld_C_RES_7_off_IY_d, OP_BYTE, "LD C,RES 7,(IY+0%02Xh)", nil},
			{c.ld_D_RES_7_off_IY_d, OP_BYTE, "LD D,RES 7,(IY+0%02Xh)", nil},
			{c.ld_E_RES_7_off_IY_d, OP_BYTE, "LD E,RES 7,(IY+0%02Xh)", nil},
			{c.ld_H_RES_7_off_IY_d, OP_BYTE, "LD H,RES 7,(IY+0%02Xh)", nil},
			{c.ld_L_RES_7_off_IY_d, OP_BYTE, "LD L,RES 7,(IY+0%02Xh)", nil},
			{c.res_7_off_IY_d, OP_BYTE, "RES 7,(IY+0%02Xh)", nil},
			{c.ld_A_RES_7_off_IY_d, OP_BYTE, "LD A,RES 7,(IY+0%02Xh)", nil},
			{c.ld_B_SET_0_off_IY_d, OP_BYTE, "LD B,SET 0,(IY+0%02Xh)", nil},
			{c.ld_C_SET_0_off_IY_d, OP_BYTE, "LD C,SET 0,(IY+0%02Xh)", nil},
			{c.ld_D_SET_0_off_IY_d, OP_BYTE, "LD D,SET 0,(IY+0%02Xh)", nil},
			{c.ld_E_SET_0_off_IY_d, OP_BYTE, "LD E,SET 0,(IY+0%02Xh)", nil},
			{c.ld_H_SET_0_off_IY_d, OP_BYTE, "LD H,SET 0,(IY+0%02Xh)", nil},
			{c.ld_L_SET_0_off_IY_d, OP_BYTE, "LD L,SET 0,(IY+0%02Xh)", nil},
			{c.set_0_off_IY_d, OP_BYTE, "SET 0,(IY+0%02Xh)", nil},
			{c.ld_A_SET_0_off_IY_d, OP_BYTE, "LD A,SET 0,(IY+0%02Xh)", nil},
			{c.ld_B_SET_1_off_IY_d, OP_BYTE, "LD B,SET 1,(IY+0%02Xh)", nil},
			{c.ld_C_SET_1_off_IY_d, OP_BYTE, "LD C,SET 1,(IY+0%02Xh)", nil},
			{c.ld_D_SET_1_off_IY_d, OP_BYTE, "LD D,SET 1,(IY+0%02Xh)", nil},
			{c.ld_E_SET_1_off_IY_d, OP_BYTE, "LD E,SET 1,(IY+0%02Xh)", nil},
			{c.ld_H_SET_1_off_IY_d, OP_BYTE, "LD H,SET 1,(IY+0%02Xh)", nil},
			{c.ld_L_SET_1_off_IY_d, OP_BYTE, "LD L,SET 1,(IY+0%02Xh)", nil},
			{c.set_1_off_IY_d, OP_BYTE, "SET 1,(IY+0%02Xh)", nil},
			{c.ld_A_SET_1_off_IY_d, OP_BYTE, "LD A,SET 1,(IY+0%02Xh)", nil},
			{c.ld_B_SET_2_off_IY_d, OP_BYTE, "LD B,SET 2,(IY+0%02Xh)", nil},
			{c.ld_C_SET_2_off_IY_d, OP_BYTE, "LD C,SET 2,(IY+0%02Xh)", nil},
			{c.ld_D_SET_2_off_IY_d, OP_BYTE, "LD D,SET 2,(IY+0%02Xh)", nil},
			{c.ld_E_SET_2_off_IY_d, OP_BYTE, "LD E,SET 2,(IY+0%02Xh)", nil},
			{c.ld_H_SET_2_off_IY_d, OP_BYTE, "LD H,SET 2,(IY+0%02Xh)", nil},
			{c.ld_L_SET_2_off_IY_d, OP_BYTE, "LD L,SET 2,(IY+0%02Xh)", nil},
			{c.set_2_off_IY_d, OP_BYTE, "SET 2,(IY+0%02Xh)", nil},
			{c.ld_A_SET_2_off_IY_d, OP_BYTE, "LD A,SET 2,(IY+0%02Xh)", nil},
			{c.ld_B_SET_3_off_IY_d, OP_BYTE, "LD B,SET 3,(IY+0%02Xh)", nil},
			{c.ld_C_SET_3_off_IY_d, OP_BYTE, "LD C,SET 3,(IY+0%02Xh)", nil},
			{c.ld_D_SET_3_off_IY_d, OP_BYTE, "LD D,SET 3,(IY+0%02Xh)", nil},
			{c.ld_E_SET_3_off_IY_d, OP_BYTE, "LD E,SET 3,(IY+0%02Xh)", nil},
			{c.ld_H_SET_3_off_IY_d, OP_BYTE, "LD H,SET 3,(IY+0%02Xh)", nil},
			{c.ld_L_SET_3_off_IY_d, OP_BYTE, "LD L,SET 3,(IY+0%02Xh)", nil},
			{c.set_3_off_IY_d, OP_BYTE, "SET 3,(IY+0%02Xh)", nil},
			{c.ld_A_SET_3_off_IY_d, OP_BYTE, "LD A,SET 3,(IY+0%02Xh)", nil},
			{c.ld_B_SET_4_off_IY_d, OP_BYTE, "LD B,SET 4,(IY+0%02Xh)", nil},
			{c.ld_C_SET_4_off_IY_d, OP_BYTE, "LD C,SET 4,(IY+0%02Xh)", nil},
			{c.ld_D_SET_4_off_IY_d, OP_BYTE, "LD D,SET 4,(IY+0%02Xh)", nil},
			{c.ld_E_SET_4_off_IY_d, OP_BYTE, "LD E,SET 4,(IY+0%02Xh)", nil},
			{c.ld_H_SET_4_off_IY_d, OP_BYTE, "LD H,SET 4,(IY+0%02Xh)", nil},
			{c.ld_L_SET_4_off_IY_d, OP_BYTE, "LD L,SET 4,(IY+0%02Xh)", nil},
			{c.set_4_off_IY_d, OP_BYTE, "SET 4,(IY+0%02Xh)", nil},
			{c.ld_A_SET_4_off_IY_d, OP_BYTE, "LD A,SET 4,(IY+0%02Xh)", nil},
			{c.ld_B_SET_5_off_IY_d, OP_BYTE, "LD B,SET 5,(IY+0%02Xh)", nil},
			{c.ld_C_SET_5_off_IY_d, OP_BYTE, "LD C,SET 5,(IY+0%02Xh)", nil},
			{c.ld_D_SET_5_off_IY_d, OP_BYTE, "LD D,SET 5,(IY+0%02Xh)", nil},
			{c.ld_E_SET_5_off_IY_d, OP_BYTE, "LD E,SET 5,(IY+0%02Xh)", nil},
			{c.ld_H_SET_5_off_IY_d, OP_BYTE, "LD H,SET 5,(IY+0%02Xh)", nil},
			{c.ld_L_SET_5_off_IY_d, OP_BYTE, "LD L,SET 5,(IY+0%02Xh)", nil},
			{c.set_5_off_IY_d, OP_BYTE, "SET 5,(IY+0%02Xh)", nil},
			{c.ld_A_SET_5_off_IY_d, OP_BYTE, "LD A,SET 5,(IY+0%02Xh)", nil},
			{c.ld_B_SET_6_off_IY_d, OP_BYTE, "LD B,SET 6,(IY+0%02Xh)", nil},
			{c.ld_C_SET_6_off_IY_d, OP_BYTE, "LD C,SET 6,(IY+0%02Xh)", nil},
			{c.ld_D_SET_6_off_IY_d, OP_BYTE, "LD D,SET 6,(IY+0%02Xh)", nil},
			{c.ld_E_SET_6_off_IY_d, OP_BYTE, "LD E,SET 6,(IY+0%02Xh)", nil},
			{c.ld_H_SET_6_off_IY_d, OP_BYTE, "LD H,SET 6,(IY+0%02Xh)", nil},
			{c.ld_L_SET_6_off_IY_d, OP_BYTE, "LD L,SET 6,(IY+0%02Xh)", nil},
			{c.set_6_off_IY_d, OP_BYTE, "SET 6,(IY+0%02Xh)", nil},
			{c.ld_A_SET_6_off_IY_d, OP_BYTE, "LD A,SET 6,(IY+0%02Xh)", nil},
			{c.ld_B_SET_7_off_IY_d, OP_BYTE, "LD B,SET 7,(IY+0%02Xh)", nil},
			{c.ld_C_SET_7_off_IY_d, OP_BYTE, "LD C,SET 7,(IY+0%02Xh)", nil},
			{c.ld_D_SET_7_off_IY_d, OP_BYTE, "LD D,SET 7,(IY+0%02Xh)", nil},
			{c.ld_E_SET_7_off_IY_d, OP_BYTE, "LD E,SET 7,(IY+0%02Xh)", nil},
			{c.ld_H_SET_7_off_IY_d, OP_BYTE, "LD H,SET 7,(IY+0%02Xh)", nil},
			{c.ld_L_SET_7_off_IY_d, OP_BYTE, "LD L,SET 7,(IY+0%02Xh)", nil},
			{c.set_7_off_IY_d, OP_BYTE, "SET 7,(IY+0%02Xh)", nil},
			{c.ld_A_SET_7_off_IY_d, OP_BYTE, "LD A,SET 7,(IY+0%02Xh)", nil}}}
}
